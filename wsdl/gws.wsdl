<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://schemas.novell.com/2005/01/GroupWise/groupwise.wsdl"
             xmlns:tns="http://schemas.novell.com/2005/01/GroupWise/groupwise.wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
             xmlns:types="http://schemas.novell.com/2005/01/GroupWise/types" xmlns:methods="http://schemas.novell.com/2005/01/GroupWise/methods"
             xmlns:events="http://schemas.novell.com/2005/01/GroupWise/events" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.novell.com/2005/01/GroupWise/types" elementFormDefault="qualified" xmlns:tns="http://schemas.novell.com/2005/01/GroupWise/types">
      <xs:element name="acceptLevel" type="tns:AcceptLevel"/>
      <xs:element name="code" type="xs:int"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="displayName" type="xs:string"/>
      <xs:element name="email" type="xs:string"/>
      <xs:element name="endDate" type="xs:dateTime"/>
      <xs:element name="gwTrace" type="xs:boolean"/>
      <xs:element name="id" type="tns:uid"/>
      <xs:element name="modified" type="xs:dateTime"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="place" type="xs:string"/>
      <xs:element name="recurrenceKey" type="xs:unsignedInt"/>
      <xs:element name="rights" type="tns:Rights"/>
      <xs:element name="sequence" type="xs:int"/>
      <xs:element name="sid" type="xs:unsignedInt"/>
      <xs:element name="session" type="xs:string"/>
      <xs:element name="startDate" type="xs:dateTime"/>
      <xs:element name="subject" type="xs:string"/>
      <xs:element name="uuid" type="tns:UUID"/>
      <xs:element name="version" type="xs:unsignedInt"/>
      <xs:simpleType name="AcceptLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Free"/>
          <xs:enumeration value="Tentative"/>
          <xs:enumeration value="Busy"/>
          <xs:enumeration value="OutOfOffice"/>
          <xs:enumeration value="NoDisplay"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AccessControlListEntry">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element ref="tns:rights"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccessControlList">
        <xs:sequence>
          <xs:element name="entry" type="tns:AccessControlListEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessMiscRight">
        <xs:sequence>
          <xs:element name="alarms" type="xs:boolean" minOccurs="0"/>
          <xs:element name="notify" type="xs:boolean" minOccurs="0"/>
          <xs:element name="readHidden" type="xs:boolean" minOccurs="0"/>
          <xs:element name="setup" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessRight">
        <xs:sequence>
          <xs:element name="read" type="xs:boolean" minOccurs="0"/>
          <xs:element name="write" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessRightChanges">
        <xs:sequence>
          <xs:element name="add" type="tns:AccessRightEntry" minOccurs="0" maxOccurs="1"/>
          <xs:element name="delete" type="tns:AccessRightEntry" minOccurs="0" maxOccurs="1"/>
          <xs:element name="update" type="tns:AccessRightEntry" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessRightEntry">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element ref="tns:id" minOccurs="0"/>
              <xs:element name="appointment" type="tns:AccessRight" minOccurs="0"/>
              <xs:element name="mail" type="tns:AccessRight" minOccurs="0"/>
              <xs:element name="misc" type="tns:AccessMiscRight" minOccurs="0"/>
              <xs:element name="note" type="tns:AccessRight" minOccurs="0"/>
              <xs:element name="task" type="tns:AccessRight" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccessRightList">
        <xs:sequence>
          <xs:element name="entry" type="tns:AccessRightEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Account">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="from" type="tns:From" minOccurs="0"/>
              <xs:element name="serverTimeout" type="xs:int" minOccurs="0"/>
              <xs:element name="flags" type="tns:AccountFlags" minOccurs="0"/>
              <xs:element name="replyTo" type="xs:string" minOccurs="0"/>
              <xs:element name="organization" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountFlags">
        <xs:sequence>
          <xs:element name="addSignature" type="xs:boolean" minOccurs="0"/>
          <xs:element name="addVCard" type="xs:boolean" minOccurs="0"/>
          <xs:element name="deleteFromTrash" type="xs:boolean" minOccurs="0"/>
          <xs:element name="downloadExternalBodies" type="xs:boolean" minOccurs="0"/>
          <xs:element name="downloadHeadersOnly" type="xs:boolean" minOccurs="0"/>
          <xs:element name="downloadNewOnly" type="xs:boolean" minOccurs="0"/>
          <xs:element name="expandThreads" type="xs:boolean" minOccurs="0"/>
          <xs:element name="lifeDelete" type="xs:boolean" minOccurs="0"/>
          <xs:element name="memberOfFullSync" type="xs:boolean" minOccurs="0"/>
          <xs:element name="neverDownloadOldMessages" type="xs:boolean" minOccurs="0"/>
          <xs:element name="pollAtStartup" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showSubscribedFolders" type="xs:boolean" minOccurs="0"/>
          <xs:element name="syncWhenFolderIsSelected" type="xs:boolean" minOccurs="0"/>
          <xs:element name="watchMyThreads" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AddressBook">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="isPersonal" type="xs:boolean" minOccurs="0"/>
              <xs:element name="isFrequentContacts" type="xs:boolean" minOccurs="0"/>
              <xs:element name="count" type="xs:int" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AddressBookItem">
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element ref="tns:uuid" minOccurs="0"/>
              <xs:element name="comment" type="xs:string" minOccurs="0"/>
              <xs:element name="sync" type="tns:DeltaSyncType" minOccurs="0"/>
              <xs:element name="domain" type="xs:string" minOccurs="0"/>
              <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
              <xs:element name="distinguishedName" type="xs:string" minOccurs="0"/>
              <xs:element name="userid" type="xs:string" minOccurs="0"/>
              <xs:element name="PABGuid" type="xs:string" minOccurs="0"/>
              <xs:element name="visibility" type="tns:Visibility" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="external" type="xs:boolean"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AddressBookList">
        <xs:sequence>
          <xs:element name="book" type="tns:AddressBook" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdvancedInfo">
        <xs:sequence>
          <xs:element name="freebusyWebsite" type="xs:string" minOccurs="0"/>
          <xs:element name="teamingWebsite" type="xs:string" minOccurs="0"/>
          <xs:element name="customerId" type="xs:string" minOccurs="0"/>
          <xs:element name="governmentId" type="xs:string" minOccurs="0"/>
          <xs:element name="organizationalId" type="xs:string" minOccurs="0"/>
          <xs:element name="computerNetworkName" type="xs:string" minOccurs="0"/>
          <xs:element name="ftpSite" type="xs:string" minOccurs="0"/>
          <xs:element name="mileage" type="xs:string" minOccurs="0"/>
          <xs:element name="userField1" type="xs:string" minOccurs="0"/>
          <xs:element name="userField2" type="xs:string" minOccurs="0"/>
          <xs:element name="userField3" type="xs:string" minOccurs="0"/>
          <xs:element name="userField4" type="xs:string" minOccurs="0"/>
          <xs:element name="BlackBerryPIN" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AgeAction">
        <xs:restriction base="xs:string">
          <xs:enumeration value="archive"/>
          <xs:enumeration value="delete"/>
          <xs:enumeration value="retain"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Alarm">
        <xs:simpleContent>
          <xs:annotation>
            <xs:documentation>Alarm time is in seconds</xs:documentation>
          </xs:annotation>
          <xs:extension base="xs:int">
            <xs:attribute name="enabled" type="xs:boolean"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="Appointment">
        <xs:complexContent>
          <xs:extension base="tns:CalendarItem">
            <xs:sequence>
              <xs:element ref="tns:startDate" minOccurs="0"/>
              <xs:element ref="tns:endDate" minOccurs="0"/>
              <xs:element name="startDay" type="xs:date" minOccurs="0"/>
              <xs:element name="endDay" type="xs:date" minOccurs="0"/>
              <xs:element ref="tns:acceptLevel" minOccurs="0"/>
              <xs:element name="alarm" type="tns:Alarm" minOccurs="0"/>
              <xs:element name="allDayEvent" type="xs:boolean" minOccurs="0"/>
              <xs:element ref="tns:place" minOccurs="0"/>
              <xs:element name="timezone" type="tns:Timezone" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="AppointmentConflict">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes"/>
          <xs:enumeration value="No"/>
          <xs:enumeration value="Ignore"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AttachmentFlags">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ComputeHash"/>
          <xs:enumeration value="Deflate"/>
          <xs:enumeration value="ReturnData"/>
          <xs:enumeration value="ReturnPath"/>
          <xs:enumeration value="Mime"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AttachmentID">
        <xs:simpleContent>
          <xs:extension base="tns:uid">
            <xs:attribute name="itemReference" type="xs:boolean"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="AttachmentInfo">
        <xs:sequence>
          <xs:element name="attachment" type="tns:AttachmentItemInfo" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttachmentItemInfo">
        <xs:sequence>
          <xs:element name="id" type="tns:AttachmentID" minOccurs="0"/>
          <xs:element ref="tns:name" minOccurs="0"/>
          <xs:element name="charset" type="xs:string" minOccurs="0"/>
          <xs:element name="contentId" type="xs:string" minOccurs="0"/>
          <xs:element name="contentType" type="xs:string" minOccurs="0"/>
          <xs:element name="size" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="date" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="hidden" type="xs:boolean" minOccurs="0"/>
          <xs:element name="isPersonal" type="xs:boolean" minOccurs="0"/>
          <xs:element name="hash" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Authentication">
        <xs:sequence>
          <xs:element name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BoxEntry">
        <xs:annotation>
          <xs:documentation>
            Return the sent items id if this returnSentItemsId is true.
            The returnSentItemsId will be the first
            id returned in the list. This is the id of the item that is
            created in the sent items
            (a.k.a. outbox, itemSource=sent) folder.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element name="status" type="tns:ItemStatus" minOccurs="0"/>
              <xs:element name="msgId" type="xs:string" minOccurs="0"/>
              <xs:element name="messageId" type="xs:string" minOccurs="0"/>
              <xs:element name="clientMessageId" type="xs:string" minOccurs="0"/>
              <xs:element name="source" type="tns:ItemSource" minOccurs="0"/>
              <xs:element name="returnSentItemsId" type="xs:boolean" minOccurs="0"/>
              <xs:element name="delivered" type="xs:dateTime"/>
              <xs:element name="class" type="tns:ItemClass" minOccurs="0"/>
              <xs:element name="security" type="tns:ItemSecurity" minOccurs="0"/>
              <xs:element name="comment" type="xs:string" minOccurs="0"/>
              <xs:element name="viewExternalHTMLImages" type="xs:boolean" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CalendarFolderAttribute">
        <xs:sequence>
          <xs:element name="flags" type="tns:CalendarFolderFlags" minOccurs="0" maxOccurs="3"/>
          <xs:element name="color" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="calSequence" type="xs:int" minOccurs="0"/>
          <xs:element name="publish" type="tns:CalendarPublish" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CalendarFolderFlags">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ShowInList"/>
          <xs:enumeration value="DontIncludeContent"/>
          <xs:enumeration value="Publish"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CalendarItem">
        <xs:complexContent>
          <xs:extension base="tns:Mail">
            <xs:sequence>
              <xs:element name="rdate" type="tns:RecurrenceDateType" minOccurs="0"/>
              <xs:element name="rrule" type="tns:RecurrenceRule" minOccurs="0"/>
              <xs:element name="exdate" type="tns:RecurrenceDateType" minOccurs="0"/>
              <xs:element ref="tns:recurrenceKey" minOccurs="0"/>
              <xs:element name="iCalId" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CalendarPublish">
        <xs:sequence>
          <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="range" type="tns:CalendarPublishRange" minOccurs="0"/>
          <xs:element name="relative" type="tns:RangeDays" minOccurs="0"/>
          <xs:element name="includePrivate" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CalendarPublishRange">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EntireCalendar"/>
          <xs:enumeration value="Relative"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalendarViewType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="day"/>
          <xs:enumeration value="month"/>
          <xs:enumeration value="multiUser"/>
          <xs:enumeration value="week"/>
          <xs:enumeration value="year"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CalHost">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="host" type="tns:Host" minOccurs="0"/>
              <xs:element name="URL" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Category">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="type" type="tns:CategoryType" minOccurs="0"/>
              <xs:element name="color" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="background" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="flags" type="tns:CategoryFlags" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CategoryFlags">
        <xs:sequence>
          <xs:element name="notInMasterList" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CategoryList">
        <xs:sequence>
          <xs:element name="category" type="tns:Category" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CategoryRefList">
        <xs:sequence>
          <xs:element name="category" type="tns:uid" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="primary" type="tns:uid"/>
      </xs:complexType>
      <xs:simpleType name="CategoryType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Personal"/>
          <xs:enumeration value="FollowUp"/>
          <xs:enumeration value="Urgent"/>
          <xs:enumeration value="LowPriority"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ChecklistInfo">
        <xs:sequence>
          <xs:element ref="tns:sequence" minOccurs="0"/>
          <xs:element name="dueDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="percentComplete" type="xs:int" minOccurs="0"/>
          <xs:element name="completed" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="thread" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ColumnSettings">
        <xs:sequence>
          <xs:element name="type" type="tns:ColumnType" minOccurs="0"/>
          <xs:element name="sort" type="tns:Sort" minOccurs="0"/>
          <xs:element name="headers" type="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ColumnType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Windows"/>
          <xs:enumeration value="Java"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CommentStatus">
        <xs:simpleContent>
          <xs:extension base="xs:dateTime">
            <xs:attribute name="comment" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:complexContent>
          <xs:extension base="tns:AddressBookItem">
            <xs:sequence>
              <xs:element name="fullName" type="tns:FullName" minOccurs="0"/>
              <xs:element name="emailList" type="tns:EmailAddressList" minOccurs="0"/>
              <xs:element name="imList" type="tns:ImAddressList" minOccurs="0"/>
              <xs:element name="phoneList" type="tns:PhoneList" minOccurs="0"/>
              <xs:element name="addressList" type="tns:PostalAddressList" minOccurs="0"/>
              <xs:element name="officeInfo" type="tns:OfficeInfo" minOccurs="0"/>
              <xs:element name="personalInfo" type="tns:PersonalInfo" minOccurs="0"/>
              <xs:element name="referenceInfo" type="tns:ReferenceInfo" minOccurs="0"/>
              <xs:element name="advancedInfo" type="tns:AdvancedInfo" minOccurs="0"/>
              <xs:element name="contactNotes" type="tns:ContactNotes" minOccurs="0"/>
              <xs:element name="vcard" type="tns:AttachmentItemInfo" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactFolder">
        <xs:complexContent>
          <xs:extension base="tns:SystemFolder">
            <xs:sequence>
              <xs:element name="addressBook" type="tns:uid" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactNote">
        <xs:sequence>
          <xs:element name="id" type="tns:uid" minOccurs="0"/>
          <xs:element name="created" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="attachment" type="tns:AttachmentItemInfo" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContactNotes">
        <xs:sequence>
          <xs:element name="contactNote" type="tns:ContactNote" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContactRefList">
        <xs:sequence>
          <xs:element name="contact" type="tns:uid" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ContactType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Contact"/>
          <xs:enumeration value="Group"/>
          <xs:enumeration value="Resource"/>
          <xs:enumeration value="Organization"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ContainerItem">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="container" type="tns:ContainerRef" minOccurs="1" maxOccurs="unbounded"/>
              <xs:element name="categories" type="tns:CategoryRefList" minOccurs="0"/>
              <xs:element name="created" type="xs:dateTime" minOccurs="0"/>
              <xs:element name="customs" type="tns:CustomList" minOccurs="0"/>
              <xs:element name="contacts" type="tns:ContactRefList" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContainerRef">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="deleted" type="xs:dateTime"/>
            <xs:attribute name="sid" type="xs:unsignedInt"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="CursorSeek">
        <xs:restriction base="xs:string">
          <xs:enumeration value="current"/>
          <xs:enumeration value="start"/>
          <xs:enumeration value="end"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Custom">
        <xs:sequence>
          <xs:element name="field" type="xs:string"/>
          <xs:element name="value" type="xs:string" minOccurs="0"/>
          <xs:element name="notify" type="tns:ReturnNotificationOptions" minOccurs="0"/>
          <xs:element name="locked" type="xs:boolean" minOccurs="0"/>
          <xs:element name="adminOnly" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="tns:CustomType" use="optional"/>
      </xs:complexType>
      <xs:complexType name="CustomList">
        <xs:sequence>
          <xs:element name="custom" type="tns:Custom" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CustomType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="String"/>
          <xs:enumeration value="Numeric"/>
          <xs:enumeration value="Date"/>
          <xs:enumeration value="Binary"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Day">
        <xs:restriction base="xs:unsignedByte">
          <xs:maxInclusive value="30"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DayOfMonth">
        <xs:restriction base="xs:byte">
          <xs:minInclusive value="-31"/>
          <xs:maxInclusive value="31"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DayOfMonthList">
        <xs:sequence>
          <xs:element name="day" type="tns:DayOfMonth" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DayOfWeek">
        <xs:simpleContent>
          <xs:extension base="tns:WeekDay">
            <xs:attribute name="occurrence" type="tns:OccurrenceType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="DayOfYear">
        <xs:restriction base="xs:short">
          <xs:minInclusive value="-366"/>
          <xs:maxInclusive value="366"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DayOfYearList">
        <xs:sequence>
          <xs:element name="day" type="tns:DayOfYear" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DayOfYearWeek">
        <xs:simpleContent>
          <xs:extension base="tns:WeekDay">
            <xs:attribute name="occurrence" type="tns:WeekOfYear"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="DayOfYearWeekList">
        <xs:sequence>
          <xs:element name="day" type="tns:DayOfYearWeek" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DelegatedStatus">
        <xs:simpleContent>
          <xs:extension base="tns:CommentStatus">
            <xs:attribute name="userid" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="DelegateeStatus">
        <xs:complexContent>
          <xs:extension base="tns:RecipientStatus">
            <xs:attribute name="userid" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DeltaInfo">
        <xs:annotation>
          <xs:documentation>
            The deltaInfo structure contains pointers or sequence numbers
            into a dynamic list.
            count:
            Input: The desired number of items to be returned in one read.
            A count of "-1" means to return all the items in the
            list.
            If omitted, all the items are returned.
            Output: The actual number of items returned.
            firstSequence:
            Input: The sequence or position to start the read.
            Output: The first valid sequence in the list.
            lastSequence:
            Input: N/A
            Output: The last sequence number successfully read.
            lastTimePORebuild:
            The last time the administrator rebuilt the post office.
            A post office rebuild resets all the sequence numbers.
            If a rebuild occurs, a resync is required before
            new deltas can be applied to a local list.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="count" type="xs:int" minOccurs="0"/>
          <xs:element name="firstSequence" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="lastSequence" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="lastTimePORebuild" type="xs:unsignedInt" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DeltaSyncType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="add"/>
          <xs:enumeration value="delete"/>
          <xs:enumeration value="update"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DiskSpaceUsage">
        <xs:sequence>
          <xs:element name="maxSize" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="threshold" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="used" type="xs:unsignedInt" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="inMB" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="DisplayFlags">
        <xs:sequence>
          <xs:element name="hideNonTasklistItems" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showQuickViewer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rememberQuickViewer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="summary" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showGroupLabels" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showFolderTree" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rememberFolderTree" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showSimpleFolderTree" type="xs:boolean" minOccurs="0"/>
          <xs:element name="showFullFolderTree" type="xs:boolean" minOccurs="0"/>
          <xs:element name="messagePreview" type="xs:boolean" minOccurs="0"/>
          <xs:element name="hideCompleted" type="xs:boolean" minOccurs="0"/>
          <xs:element name="hideCompletedAfterOneDay" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DisplayFolderType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Calendar"/>
          <xs:enumeration value="Checklist"/>
          <xs:enumeration value="Contacts"/>
          <xs:enumeration value="ContactsPersonal"/>
          <xs:enumeration value="ContactsOffice"/>
          <xs:enumeration value="ContactsUserDefined"/>
          <xs:enumeration value="DiscussionThread"/>
          <xs:enumeration value="DiscussionThreadList"/>
          <xs:enumeration value="Documents"/>
          <xs:enumeration value="Draft"/>
          <xs:enumeration value="Mailbox"/>
          <xs:enumeration value="MAPIRoot"/>
          <xs:enumeration value="Newsgroup"/>
          <xs:enumeration value="NNTPServer"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="PanelCalendar"/>
          <xs:enumeration value="PanelChecklist"/>
          <xs:enumeration value="PanelRecentActivity"/>
          <xs:enumeration value="PanelSummaryCalendar"/>
          <xs:enumeration value="PanelUnreadItems"/>
          <xs:enumeration value="Query"/>
          <xs:enumeration value="QueryResults"/>
          <xs:enumeration value="SentItems"/>
          <xs:enumeration value="TaskList"/>
          <xs:enumeration value="Toolbar"/>
          <xs:enumeration value="Trash"/>
          <xs:enumeration value="Unknown"/>
          <xs:enumeration value="UserDefined"/>
          <xs:enumeration value="VersionList"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DisplaySettings">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="folderType" type="tns:DisplayFolderType" minOccurs="0"/>
              <xs:element name="settingType" type="tns:DisplaySettingsType" minOccurs="0"/>
              <xs:element name="flags" type="tns:DisplayFlags" minOccurs="0"/>
              <xs:element name="types" type="xs:string" minOccurs="0"/>
              <xs:element name="source" type="xs:string" minOccurs="0"/>
              <xs:element name="view" type="tns:ViewType" minOccurs="0"/>
              <xs:element name="columns" type="tns:ColumnSettings" minOccurs="0" maxOccurs="2"/>
              <xs:element name="filterDaysForward" type="xs:int" minOccurs="0"/>
              <xs:element name="filterDaysBackward" type="xs:int" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DisplaySettingsList">
        <xs:sequence>
          <xs:element name="settings" type="tns:DisplaySettings" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DisplaySettingsType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Folder"/>
          <xs:enumeration value="FolderDefault"/>
          <xs:enumeration value="Panel"/>
          <xs:enumeration value="PanelTemplate"/>
          <xs:enumeration value="Unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Distribution">
        <xs:sequence>
          <xs:element name="from" type="tns:From" minOccurs="0"/>
          <xs:element name="to" type="xs:string" minOccurs="0"/>
          <xs:element name="cc" type="xs:string" minOccurs="0"/>
          <xs:element name="bc" type="xs:string" minOccurs="0"/>
          <xs:element name="recipients" type="tns:RecipientList" minOccurs="0"/>
          <xs:element name="sendoptions" type="tns:SendOptions" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DistributionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="TO"/>
          <xs:enumeration value="CC"/>
          <xs:enumeration value="BC"/>
          <xs:enumeration value="replyTo"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Document">
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element ref="tns:subject" minOccurs="0"/>
              <xs:element name="library" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="documentNumber" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="documentTypeName" type="xs:string" minOccurs="0"/>
              <xs:element name="author" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="creator" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="officialVersion" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="currentVersion" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="current" type="tns:AccessControlList" minOccurs="0"/>
              <xs:element name="official" type="tns:AccessControlList" minOccurs="0"/>
              <xs:element name="other" type="tns:AccessControlList" minOccurs="0"/>
              <xs:element name="size" type="xs:int" minOccurs="0" default="0"/>
              <xs:element name="filename" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DocumentCustom">
        <xs:complexContent>
          <xs:extension base="tns:Custom">
            <xs:sequence>
              <xs:element name="id" type="tns:uid" minOccurs="0"/>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="readOnly" type="xs:boolean" minOccurs="0"/>
              <xs:element name="hidden" type="xs:boolean" minOccurs="0"/>
              <xs:element name="required" type="xs:boolean" minOccurs="0"/>
              <xs:element name="textCase" type="tns:TextCase" minOccurs="0"/>
              <xs:element name="maximumLength" type="xs:int" minOccurs="0"/>
              <xs:element name="minimum" type="xs:int" minOccurs="0"/>
              <xs:element name="maximum" type="xs:int" minOccurs="0"/>
              <xs:element name="table" type="tns:LookupTable" minOccurs="0"/>
              <xs:element name="related" type="tns:LookupTable" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DocumentRef">
        <xs:complexContent>
          <xs:extension base="tns:Mail">
            <xs:sequence>
              <xs:element name="library" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="documentNumber" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="filename" type="xs:string" minOccurs="0"/>
              <xs:element name="documentTypeName" type="xs:string" minOccurs="0"/>
              <xs:element name="author" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="creator" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="versionCreator" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="officialVersion" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="currentVersion" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="versionNumber" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="versionDescription" type="xs:string" minOccurs="0"/>
              <xs:element name="fileSize" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="acl" type="tns:AccessControlList" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DocumentType">
        <xs:sequence>
          <xs:element ref="tns:name"/>
          <xs:element name="life" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="maximumVersions" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="ageAction" type="tns:AgeAction" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DocumentTypeList">
        <xs:sequence>
          <xs:element name="item" type="tns:DocumentType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EmailAddressList">
        <xs:sequence>
          <xs:element ref="tns:email" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="primary" type="xs:string"/>
      </xs:complexType>
      <xs:simpleType name="Execution">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Startup"/>
          <xs:enumeration value="Exit"/>
          <xs:enumeration value="New"/>
          <xs:enumeration value="FolderOpen"/>
          <xs:enumeration value="FolderClose"/>
          <xs:enumeration value="FolderNew"/>
          <xs:enumeration value="Completed"/>
          <xs:enumeration value="User"/>
          <xs:enumeration value="Unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Filter">
        <xs:sequence>
          <xs:element name="element" type="tns:FilterElement" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FilterDate">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Today"/>
          <xs:enumeration value="Tomorrow"/>
          <xs:enumeration value="ThisMonth"/>
          <xs:enumeration value="ThisWeek"/>
          <xs:enumeration value="ThisYear"/>
          <xs:enumeration value="Yesterday"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FilterElement">
        <xs:sequence>
          <xs:element name="op" type="tns:FilterOp"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FilterEntry">
        <xs:complexContent>
          <xs:extension base="tns:FilterElement">
            <xs:sequence>
              <xs:element name="field" type="xs:string" minOccurs="0"/>
              <xs:element name="custom" type="tns:Custom" minOccurs="0"/>
              <xs:element name="value" type="xs:string" minOccurs="0"/>
              <xs:element name="date" type="tns:FilterDate" minOccurs="0"/>
              <xs:element name="mask" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FilterGroup">
        <xs:annotation>
          <xs:documentation>
            FilterGroup comprises FilterOp "and", "or" or "not"
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:FilterElement">
            <xs:sequence>
              <xs:element name="element" type="tns:FilterElement" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="FilterOp">
        <xs:restriction base="xs:string">
          <xs:enumeration value="and"/>
          <xs:enumeration value="or"/>
          <xs:enumeration value="not"/>
          <xs:enumeration value="eq"/>
          <xs:enumeration value="ne"/>
          <xs:enumeration value="gt"/>
          <xs:enumeration value="lt"/>
          <xs:enumeration value="gte"/>
          <xs:enumeration value="lte"/>
          <xs:enumeration value="contains"/>
          <xs:enumeration value="containsWord"/>
          <xs:enumeration value="begins"/>
          <xs:enumeration value="exists"/>
          <xs:enumeration value="notExist"/>
          <xs:enumeration value="isOf"/>
          <xs:enumeration value="isNotOf"/>
          <xs:enumeration value="fieldEqual"/>
          <xs:enumeration value="fieldGTE"/>
          <xs:enumeration value="fieldGT"/>
          <xs:enumeration value="fieldLTE"/>
          <xs:enumeration value="fieldLT"/>
          <xs:enumeration value="fieldNE"/>
          <xs:enumeration value="fieldDateEqual"/>
          <xs:enumeration value="bitCare"/>
          <xs:enumeration value="notContains"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Folder">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="parent" type="tns:uid" minOccurs="0"/>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="count" type="xs:int" minOccurs="0"/>
              <xs:element name="hasUnread" type="xs:boolean" minOccurs="0"/>
              <xs:element name="unreadCount" type="xs:int" minOccurs="0"/>
              <xs:element ref="tns:sequence" minOccurs="0"/>
              <xs:element name="calendarAttribute" type="tns:CalendarFolderAttribute" minOccurs="0"/>
              <xs:element name="URL" type="xs:string" minOccurs="0"/>
              <xs:element name="frequency" type="xs:int" minOccurs="0"/>
              <xs:element name="displaySettings" type="tns:FolderDisplaySettings" minOccurs="0"/>
              <xs:element name="displayReference" type="tns:uid" minOccurs="0"/>
              <xs:element name="flags" type="tns:FolderFlags" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FolderACL">
        <xs:sequence>
          <xs:element name="entry" type="tns:FolderACLEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FolderACLEntry">
        <xs:complexContent>
          <xs:extension base="tns:AccessControlListEntry">
            <xs:sequence>
              <xs:element name="status" type="tns:FolderACLStatus" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="FolderACLStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="pending"/>
          <xs:enumeration value="accepted"/>
          <xs:enumeration value="deleted"/>
          <xs:enumeration value="opened"/>
          <xs:enumeration value="owner"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FolderDisplaySettings">
        <xs:complexContent>
          <xs:extension base="tns:DisplaySettings">
            <xs:sequence>
              <xs:element name="panelColumns" type="xs:int" minOccurs="0"/>
              <xs:element name="panels" type="tns:PanelList" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FolderFlags">
        <xs:sequence>
          <xs:element name="firstUnread" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FolderList">
        <xs:sequence>
          <xs:element name="folder" type="tns:Folder" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FolderType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Mailbox"/>
          <xs:enumeration value="SentItems"/>
          <xs:enumeration value="Draft"/>
          <xs:enumeration value="Trash"/>
          <xs:enumeration value="Calendar"/>
          <xs:enumeration value="Contacts"/>
          <xs:enumeration value="Documents"/>
          <xs:enumeration value="Checklist"/>
          <xs:enumeration value="Cabinet"/>
          <xs:enumeration value="MAPIRoot"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="NNTPServer"/>
          <xs:enumeration value="NNTPNewsGroup"/>
          <xs:enumeration value="IMAP"/>
          <xs:enumeration value="Query"/>
          <xs:enumeration value="Root"/>
          <xs:enumeration value="JunkMail"/>
          <xs:enumeration value="Notes"/>
          <xs:enumeration value="RSS"/>
          <xs:enumeration value="Subscribe"/>
          <xs:enumeration value="UserContacts"/>
          <xs:enumeration value="Proxy"/>
          <xs:enumeration value="Teaming"/>
          <xs:enumeration value="TeamingMyTeams"/>
          <xs:enumeration value="TeamingFavorites"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FreeBusyBlockList">
        <xs:sequence>
          <xs:element name="block" type="tns:FreeBusyBlock" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FreeBusyBlock">
        <xs:sequence>
          <xs:element ref="tns:startDate"/>
          <xs:element ref="tns:endDate"/>
          <xs:element ref="tns:acceptLevel" minOccurs="0"/>
          <xs:element ref="tns:subject" minOccurs="0"/>
          <xs:element ref="tns:place" minOccurs="0"/>
          <xs:element name="from" type="tns:From" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FreeBusyInfo">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element name="recipType" type="tns:RecipientType" minOccurs="0"/>
              <xs:element name="blocks" type="tns:FreeBusyBlockList"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FreeBusyUserList">
        <xs:sequence>
          <xs:element name="user" type="tns:NameAndEmail" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="external" type="xs:boolean"/>
        <xs:attribute name="externalGroupWise" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="FreeBusyInfoList">
        <xs:sequence>
          <xs:element name="user" type="tns:FreeBusyInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FreeBusyStats">
        <xs:sequence>
          <xs:element name="responded" type="xs:int"/>
          <xs:element name="outstanding" type="xs:int"/>
          <xs:element name="total" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Frequency">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily"/>
          <xs:enumeration value="Weekly"/>
          <xs:enumeration value="Monthly"/>
          <xs:enumeration value="Yearly"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="From">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element name="replyTo" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FullName">
        <xs:sequence>
          <xs:element ref="tns:displayName" minOccurs="0"/>
          <xs:element name="namePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="firstName" type="xs:string" minOccurs="0"/>
          <xs:element name="middleName" type="xs:string" minOccurs="0"/>
          <xs:element name="lastName" type="xs:string" minOccurs="0"/>
          <xs:element name="nameSuffix" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GeneralAccount">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element ref="tns:displayName" minOccurs="0"/>
              <xs:element name="warnAttachmentLimit_KB" type="xs:int" minOccurs="0"/>
              <xs:element name="warnExternalHTMLImages" type="tns:HTMLImages" minOccurs="0"/>
              <xs:element name="online" type="tns:PollSettings" minOccurs="0"/>
              <xs:element name="remote" type="tns:PollSettings" minOccurs="0"/>
              <xs:element name="cache" type="tns:PollSettings" minOccurs="0"/>
              <xs:element name="NNTP" type="tns:NNTPSettings" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="GMTOffset">
        <xs:annotation>
          <xs:documentation>
            The number of seconds from GMT (UTC)
          </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
          <xs:minExclusive value="-86400"/>
          <xs:maxExclusive value="86400"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Group">
        <xs:complexContent>
          <xs:extension base="tns:AddressBookItem">
            <xs:sequence>
              <xs:element ref="tns:email" minOccurs="0"/>
              <xs:element name="members" type="tns:GroupMemberList" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GroupMember">
        <xs:sequence>
          <xs:element ref="tns:id" minOccurs="0"/>
          <xs:element ref="tns:sid" minOccurs="0"/>
          <xs:element ref="tns:name" minOccurs="0"/>
          <xs:element ref="tns:email" minOccurs="0"/>
          <xs:element name="distType" type="tns:DistributionType" minOccurs="0" default="TO"/>
          <xs:element name="itemType" type="tns:ContactType" minOccurs="0" default="Contact"/>
          <xs:element name="members" type="tns:GroupMemberList" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GroupMemberList">
        <xs:sequence>
          <xs:element name="member" type="tns:GroupMember" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Header">
        <xs:sequence>
          <xs:element name="field" type="xs:string"/>
          <xs:element name="width" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Host">
        <xs:sequence>
          <xs:element name="ipAddress" type="xs:string" minOccurs="0" maxOccurs="1"/>
          <xs:element name="port" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Hour">
        <xs:restriction base="xs:unsignedByte">
          <xs:maxInclusive value="23"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HTMLImages">
        <xs:restriction base="xs:string">
          <xs:enumeration value="always"/>
          <xs:enumeration value="never"/>
          <xs:enumeration value="checkFrequentContacts"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="IMAP">
        <xs:complexContent>
          <xs:extension base="tns:Account">
            <xs:sequence>
              <xs:element name="folder" type="tns:uid" minOccurs="0"/>
              <xs:element name="inbound" type="tns:Server" minOccurs="0"/>
              <xs:element name="outbound" type="tns:Server" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IMAPFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="folderType" type="tns:FolderType" minOccurs="0"/>
              <xs:element name="account" type="tns:IMAP" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImAddress">
        <xs:sequence>
          <xs:element name="service" type="xs:string" minOccurs="0"/>
          <xs:element name="address" type="xs:string" minOccurs="0"/>
          <!-- type = work, home, etc. -->
          <xs:element name="type" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="primary" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="ImAddressList">
        <xs:sequence>
          <xs:element name="im" type="tns:ImAddress" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InternetStatusTracking">
        <xs:sequence>
          <xs:element name="enableDeliveryConfirmaion" type="xs:boolean" minOccurs="0"/>
          <xs:element name="deliveryConfirmaionToMyMailbox" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Item">
        <xs:sequence>
          <xs:element ref="tns:id" minOccurs="0"/>
          <xs:element ref="tns:sid" minOccurs="0"/>
          <xs:element ref="tns:name" minOccurs="0"/>
          <xs:element ref="tns:version" minOccurs="0"/>
          <xs:element ref="tns:modified" minOccurs="0"/>
          <xs:element name="changes" type="tns:ItemChanges" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ItemChanges">
        <xs:sequence>
          <xs:element name="add" type="tns:Item" minOccurs="0" maxOccurs="1"/>
          <xs:element name="delete" type="tns:Item" minOccurs="0" maxOccurs="1"/>
          <xs:element name="update" type="tns:Item" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ItemClass">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Public"/>
          <xs:enumeration value="Private"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ItemList">
        <xs:sequence>
          <xs:element name="item" type="tns:Item" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="offset" type="xs:int"/>
        <xs:attribute name="count" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="ItemOptions">
        <xs:sequence>
          <xs:element name="priority" type="tns:ItemOptionsPriority" minOccurs="0"/>
          <xs:element name="expires" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="delayDeliveryUntil" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="concealSubject" type="xs:boolean" minOccurs="0"/>
          <xs:element name="hidden" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ItemOptionsPriority">
        <xs:restriction base="xs:string">
          <xs:enumeration value="High"/>
          <xs:enumeration value="Standard"/>
          <xs:enumeration value="Low"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ItemRef">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="uid" type="tns:uid" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="ItemRefList">
        <xs:sequence>
          <xs:element name="item" type="tns:uid" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Items">
        <xs:sequence>
          <xs:element name="item" type="tns:Item" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ItemSecurity">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Proprietary"/>
          <xs:enumeration value="Confidential"/>
          <xs:enumeration value="Secret"/>
          <xs:enumeration value="TopSecret"/>
          <xs:enumeration value="ForYourEyesOnly"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ItemSource">
        <xs:restriction base="xs:string">
          <xs:enumeration value="received"/>
          <xs:enumeration value="sent"/>
          <xs:enumeration value="draft"/>
          <xs:enumeration value="personal"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ItemStatus">
        <xs:sequence>
          <xs:element name="accepted" type="xs:boolean" minOccurs="0"/>
          <xs:element name="completed" type="xs:boolean" minOccurs="0"/>
          <xs:element name="delegated" type="xs:boolean" minOccurs="0"/>
          <xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
          <xs:element name="forwarded" type="xs:boolean" minOccurs="0"/>
          <xs:element name="private" type="xs:boolean" minOccurs="0"/>
          <xs:element name="opened" type="xs:boolean" minOccurs="0"/>
          <xs:element name="read" type="xs:boolean" minOccurs="0"/>
          <xs:element name="replied" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ItemThreading">
        <xs:sequence>
          <xs:element name="id" type="xs:string" minOccurs="0"/>
          <xs:element name="parent" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JunkEntry">
        <xs:sequence>
          <xs:element name="id" type="tns:uid" minOccurs="0"/>
          <xs:element name="match" type="xs:string"/>
          <xs:element name="matchType" type="tns:JunkMatchType"/>
          <xs:element name="listType" type="tns:JunkHandlingListType" minOccurs="0"/>
          <xs:element name="useCount" type="xs:int" minOccurs="0"/>
          <xs:element name="lastUsed" type="xs:dateTime" minOccurs="0"/>
          <xs:element ref="tns:version" minOccurs="0"/>
          <xs:element ref="tns:modified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JunkHandlingList">
        <xs:sequence>
          <xs:element name="entry" type="tns:JunkEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="JunkHandlingListType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="junk"/>
          <xs:enumeration value="block"/>
          <xs:enumeration value="trust"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="JunkMatchType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="email"/>
          <xs:enumeration value="domain"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Library">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="domain" type="xs:string" minOccurs="0"/>
              <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LibraryList">
        <xs:sequence>
          <xs:element name="library" type="tns:Library" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LinkInfo">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
          <xs:element name="type" type="tns:LinkType"/>
          <xs:element name="thread" type="xs:string" minOccurs="0"/>
          <xs:element name="copyAttachments" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="LinkType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="forward"/>
          <xs:enumeration value="reply"/>
          <xs:enumeration value="draft"/>
          <xs:enumeration value="resend"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="LookupTable">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="id" type="xs:string" minOccurs="0"/>
          <xs:element name="value" type="xs:string" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Mail">
        <xs:complexContent>
          <xs:extension base="tns:BoxEntry">
            <xs:sequence>
              <xs:element ref="tns:subject" minOccurs="0"/>
              <xs:element name="originalSubject" type="xs:string" minOccurs="0"/>
              <xs:element name="subjectPrefix" type="xs:string" minOccurs="0"/>
              <xs:element name="distribution" type="tns:Distribution" minOccurs="0"/>
              <xs:element name="message" type="tns:MessageBody" minOccurs="0"/>
              <xs:element name="attachments" type="tns:AttachmentInfo" minOccurs="0"/>
              <xs:element name="options" type="tns:ItemOptions" minOccurs="0"/>
              <xs:element name="link" type="tns:LinkInfo" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="hasAttachment" type="xs:boolean" default="0" minOccurs="0"/>
              <xs:element name="size" type="xs:int" minOccurs="0" default="0"/>
              <xs:element name="subType" type="xs:string" minOccurs="0"/>
              <xs:element name="nntpOrImap" type="xs:boolean" minOccurs="0"/>
              <xs:element name="smimeType" type="tns:SMimeOperation" minOccurs="0"/>
              <xs:element name="checklist" type="tns:ChecklistInfo" minOccurs="0"/>
              <xs:element name="xField" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="originalId" type="tns:uid" minOccurs="0"/>
              <xs:element name="archiveId" type="xs:string" minOccurs="0"/>
              <xs:element name="threading" type="tns:ItemThreading" minOccurs="0"/>
              <xs:element name="retentionModified" type="xs:dateTime" minOccurs="0"/>
              <xs:element name="rssURL" type="xs:string" minOccurs="0"/>
              <xs:element name="junkMailEvaluation" type="tns:TextLines" minOccurs="0"/>
              <xs:element name="junkMailSettings" type="tns:TextLines" minOccurs="0"/>
              <xs:element name="globalSignatureInternalId" type="xs:string" minOccurs="0"/>
              <xs:element name="totals" type="tns:SendTotals" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="internet" type="xs:boolean"/>
            <xs:attribute name="stub" type="xs:boolean"/>
            <xs:attribute name="mime" type="xs:boolean"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:annotation>
        <xs:documentation>
          Currently there is only one MessageBody part. The MessageBody part is
          the text plain message body. The HTML message body will be an
          attachment with a name "text.htm". The HTML message body can have
          related part attachments. They are related if they come immediatelly
          after the "text.htm" attachment and they have a "contentId" element.
        </xs:documentation>
      </xs:annotation>
      <xs:complexType name="MessageBody">
        <xs:sequence>
          <xs:element name="part" type="tns:MessagePart" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="MessageList">
        <xs:restriction base="xs:string">
          <xs:enumeration value="All"/>
          <xs:enumeration value="Modified"/>
          <xs:enumeration value="New"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="MessagePart">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute name="id" type="tns:uid" use="optional"/>
            <xs:attribute name="contentId" type="xs:string" default=""/>
            <xs:attribute name="contentType" type="xs:string" default="text/plain" use="optional"/>
            <xs:attribute name="length" type="xs:int" default="0" use="optional"/>
            <xs:attribute name="offset" type="xs:int" default="0" use="optional"/>
            <xs:attribute name="hash" type="xs:string" default="" use="optional"/>
            <xs:attribute name="path" type="xs:string" default="" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="MessageType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Appointment"/>
          <xs:enumeration value="CalendarItem"/>
          <xs:enumeration value="DocumentReference"/>
          <xs:enumeration value="Mail"/>
          <xs:enumeration value="Note"/>
          <xs:enumeration value="PhoneMessage"/>
          <xs:enumeration value="Task"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Method">
        <xs:restriction base="xs:string">
          <xs:enumeration value="update"/>
          <xs:enumeration value="add"/>
          <xs:enumeration value="delete"/>
          <xs:enumeration value="deleteAll"/>
          <xs:enumeration value="bitSet"/>
          <xs:enumeration value="bitClear"/>
          <xs:enumeration value="ignore"/>
          <xs:enumeration value="valid"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Minute">
        <xs:restriction base="xs:unsignedByte">
          <xs:maxInclusive value="59"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ModifyItem">
        <xs:sequence>
          <xs:element name="id" type="tns:uid"/>
          <xs:element name="notification" type="tns:SharedFolderNotification" minOccurs="0"/>
          <xs:element name="updates" type="tns:ItemChanges"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Month">
        <xs:restriction base="xs:unsignedByte">
          <xs:maxInclusive value="11"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="MonthList">
        <xs:sequence>
          <xs:element name="month" type="tns:Month" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MoveItem">
        <xs:sequence>
          <xs:element name="id" type="tns:uid"/>
          <xs:element name="container" type="tns:uid" minOccurs="0"/>
          <xs:element name="from" type="tns:uid" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NameAndEmail">
        <xs:sequence>
          <xs:element ref="tns:displayName" minOccurs="0"/>
          <xs:element ref="tns:email" minOccurs="0"/>
          <xs:element ref="tns:uuid" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Nickname">
        <xs:complexContent>
          <xs:extension base="tns:AddressBookItem">
            <xs:sequence>
              <xs:element ref="tns:email" minOccurs="0"/>
              <xs:element name="realType" type="tns:ContactType" minOccurs="0" default="Contact"/>
              <xs:element name="owner" type="tns:Owner" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NNTP">
        <xs:complexContent>
          <xs:extension base="tns:Account">
            <xs:sequence>
              <xs:element name="folder" type="tns:uid" minOccurs="0"/>
              <xs:element name="inbound" type="tns:Server" minOccurs="0"/>
              <xs:element name="outbound" type="tns:Server" minOccurs="0"/>
              <xs:element name="life" type="xs:int" minOccurs="0"/>
              <xs:element name="maxMessages" type="xs:int" minOccurs="0"/>
              <xs:element name="newMessagesXDaysOld" type="xs:int" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NNTPFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="folderType" type="tns:FolderType" minOccurs="0"/>
              <xs:element name="account" type="tns:NNTP" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NNTPSettings">
        <xs:sequence>
          <xs:element name="usePlainText" type="xs:boolean" minOccurs="0"/>
          <xs:element name="maxLine" type="xs:int" minOccurs="0"/>
          <xs:element name="category" type="tns:uid" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Note">
        <xs:complexContent>
          <xs:extension base="tns:CalendarItem">
            <xs:sequence>
              <xs:element name="startDate" type="xs:date" minOccurs="0"/>
              <xs:element name="timezone" type="tns:Timezone" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NotifyEntry">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element ref="tns:id" minOccurs="0"/>
              <xs:element name="rights" type="tns:Subscribe"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NotifyEntryChanges">
        <xs:sequence>
          <xs:element name="add" type="tns:NotifyEntry" minOccurs="0" maxOccurs="1"/>
          <xs:element name="delete" type="tns:NotifyEntry" minOccurs="0" maxOccurs="1"/>
          <xs:element name="update" type="tns:NotifyEntry" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NotifyList">
        <xs:sequence>
          <xs:element name="entry" type="tns:NotifyEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NotificationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SharedAddressBook"/>
          <xs:enumeration value="SharedFolder"/>
          <xs:enumeration value="SharedCalendar"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OccurrenceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="First"/>
          <xs:enumeration value="Second"/>
          <xs:enumeration value="Third"/>
          <xs:enumeration value="Fourth"/>
          <xs:enumeration value="Fifth"/>
          <xs:enumeration value="Last"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OfficeInfo">
        <xs:sequence>
          <xs:element name="organization" type="tns:ItemRef" minOccurs="0"/>
          <xs:element name="department" type="xs:string" minOccurs="0"/>
          <xs:element name="title" type="xs:string" minOccurs="0"/>
          <xs:element name="website" type="xs:string" minOccurs="0"/>
          <xs:element name="profession" type="xs:string" minOccurs="0"/>
          <xs:element name="location" type="xs:string" minOccurs="0"/>
          <xs:element name="manager" type="xs:string" minOccurs="0"/>
          <xs:element name="assistant" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Organization">
        <xs:complexContent>
          <xs:extension base="tns:AddressBookItem">
            <xs:sequence>
              <xs:element name="contact" type="tns:ItemRef" minOccurs="0"/>
              <xs:element name="phone" type="xs:string" minOccurs="0"/>
              <xs:element name="fax" type="xs:string" minOccurs="0"/>
              <xs:element name="address" type="tns:PostalAddress" minOccurs="0"/>
              <xs:element name="website" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Owner">
        <xs:sequence>
          <xs:element name="domain" type="xs:string" minOccurs="0"/>
          <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
          <xs:element name="userid" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PanelDisplaySettings">
        <xs:complexContent>
          <xs:extension base="tns:DisplaySettings">
            <xs:sequence>
              <xs:element name="panelName" type="xs:string" minOccurs="0"/>
              <xs:element name="column" type="xs:int" minOccurs="0"/>
              <xs:element name="index" type="xs:int" minOccurs="0"/>
              <xs:element name="container" type="tns:uid" minOccurs="0"/>
              <xs:element name="filter" type="tns:Filter" minOccurs="0"/>
              <xs:element name="splitBar" type="xs:string" minOccurs="0"/>
              <xs:element name="width" type="xs:int" minOccurs="0"/>
              <xs:element name="height" type="xs:int" minOccurs="0"/>
              <xs:element name="originalHeight" type="xs:int" minOccurs="0"/>
              <xs:element name="weekViewColumns" type="xs:int" minOccurs="0"/>
              <xs:element name="calendarView" type="tns:CalendarViewType" minOccurs="0"/>
              <xs:element name="website" type="xs:string" minOccurs="0"/>
              <xs:element name="interval" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="hScrollPosition" type="xs:int" minOccurs="0"/>
              <xs:element name="vScrollPosition" type="xs:int" minOccurs="0"/>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element name="parent" type="tns:uid" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PanelList">
        <xs:sequence>
          <xs:element name="panel" type="tns:PanelDisplaySettings" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PersonalInfo">
        <xs:sequence>
          <xs:element name="birthday" type="xs:date" minOccurs="0"/>
          <xs:element name="website" type="xs:string" minOccurs="0"/>
          <xs:element name="spouse" type="xs:string" minOccurs="0"/>
          <xs:element name="children" type="xs:string" minOccurs="0"/>
          <xs:element name="hobbies" type="xs:string" minOccurs="0"/>
          <xs:element name="nickName" type="xs:string" minOccurs="0"/>
          <xs:element name="picture" type="tns:PictureData" minOccurs="0"/>
          <xs:element name="weddingAnniversary" type="xs:date" minOccurs="0"/>
          <xs:element name="displayBirthdayYear" type="xs:boolean" minOccurs="0"/>
          <xs:element name="displayAnniversaryYear" type="xs:boolean" minOccurs="0"/>
          <xs:element name="timezone" type="tns:Timezone" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhoneFlags">
        <xs:sequence>
          <xs:element name="called" type="xs:boolean" minOccurs="0"/>
          <xs:element name="pleaseCall" type="xs:boolean" minOccurs="0"/>
          <xs:element name="willCall" type="xs:boolean" minOccurs="0"/>
          <xs:element name="returnedYourCall" type="xs:boolean" minOccurs="0"/>
          <xs:element name="wantsToSeeYou" type="xs:boolean" minOccurs="0"/>
          <xs:element name="cameToSeeYou" type="xs:boolean" minOccurs="0"/>
          <xs:element name="urgent" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhoneList">
        <xs:sequence>
          <xs:element name="phone" type="tns:PhoneNumber" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="default" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="PhoneMessage">
        <xs:complexContent>
          <xs:extension base="tns:Mail">
            <xs:sequence>
              <xs:element name="caller" type="xs:string" minOccurs="0"/>
              <xs:element name="company" type="xs:string" minOccurs="0"/>
              <xs:element name="phone" type="xs:string" minOccurs="0"/>
              <xs:element name="flags" type="tns:PhoneFlags" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PhoneNumber">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" type="tns:PhoneNumberType" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Fax"/>
          <xs:enumeration value="Home"/>
          <xs:enumeration value="Mobile"/>
          <xs:enumeration value="Office"/>
          <xs:enumeration value="Pager"/>
          <xs:enumeration value="CallBack"/>
          <xs:enumeration value="Office2"/>
          <xs:enumeration value="Radio"/>
          <xs:enumeration value="Car"/>
          <xs:enumeration value="Other"/>
          <xs:enumeration value="Telex"/>
          <xs:enumeration value="ISDN"/>
          <xs:enumeration value="Assistant"/>
          <xs:enumeration value="Home2"/>
          <xs:enumeration value="FaxOffice"/>
          <xs:enumeration value="FaxHome"/>
          <xs:enumeration value="TTYTDD"/>
          <xs:enumeration value="Company"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PictureData">
        <xs:annotation>
          <xs:documentation>
            Contacts now support a picture.
            The picture has the following restrictions:
            1. The file format is jpeg.
            The contentType below specifies the mime contentType of
            "image/jpeg".
            2. The size of the file must be less than 2K.
            3. The maximum dimensions of the image is 64 X 64 pixels.
            Developers should ensure that any images meet the above criteria.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="contentType" type="xs:string" minOccurs="0"/>
          <xs:element name="size" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PlainText">
        <xs:complexContent>
          <xs:extension base="tns:Authentication">
            <xs:sequence>
              <xs:element name="password" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PollField">
        <xs:sequence>
          <xs:element name="field" type="xs:string"/>
          <xs:element name="method" type="tns:Method"/>
          <xs:element name="value" type="xs:string" minOccurs="0"/>
          <xs:element name="container" type="tns:ContainerRef" minOccurs="0"/>
          <xs:element name="timezone" type="tns:Timezone" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PollInfo">
        <xs:sequence>
          <xs:element name="type" type="tns:PollInfoType" minOccurs="0"/>
          <xs:element ref="tns:id" minOccurs="0"/>
          <xs:element ref="tns:sid" minOccurs="0"/>
          <xs:element ref="tns:sequence" minOccurs="0"/>
          <xs:element name="item" type="tns:PollItemType" minOccurs="0"/>
          <xs:element ref="tns:startDate" minOccurs="0"/>
          <xs:element ref="tns:endDate" minOccurs="0"/>
          <xs:element name="source" type="tns:ItemSource" minOccurs="0"/>
          <xs:element name="message" type="tns:MessageType" minOccurs="0"/>
          <xs:element name="status" type="tns:ItemStatus" minOccurs="0"/>
          <xs:element name="referenceCount" type="xs:int" minOccurs="0"/>
          <xs:element name="container" type="tns:ContainerRef" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="delta" type="tns:PollField" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PollInfoType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="add"/>
          <xs:enumeration value="preModify"/>
          <xs:enumeration value="postModify"/>
          <xs:enumeration value="purge"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PollInfoList">
        <xs:sequence>
          <xs:element name="info" type="tns:PollInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PollItemType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Contact"/>
          <xs:enumeration value="Folder"/>
          <xs:enumeration value="Item"/>
          <xs:enumeration value="Group"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PollNotify">
        <xs:sequence>
          <xs:element name="ipAddress" type="xs:string"/>
          <xs:element name="port" type="xs:unsignedInt"/>
          <xs:element ref="tns:sequence" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PollSettings">
        <xs:sequence>
          <xs:element name="pollAtStartup" type="xs:boolean" minOccurs="0"/>
          <xs:element name="pollMarkedAccounts" type="xs:boolean" minOccurs="0"/>
          <xs:element name="pollInterval" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PostalAddress">
        <xs:sequence>
          <xs:element ref="tns:description" minOccurs="0"/>
          <xs:element name="streetAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="location" type="xs:string" minOccurs="0"/>
          <xs:element name="city" type="xs:string" minOccurs="0"/>
          <xs:element name="state" type="xs:string" minOccurs="0"/>
          <xs:element name="postalCode" type="xs:string" minOccurs="0"/>
          <xs:element name="country" type="xs:string" minOccurs="0"/>
          <xs:element name="poBox" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="tns:PostalAddressType" use="required"/>
      </xs:complexType>
      <xs:complexType name="PostalAddressList">
        <xs:sequence>
          <xs:element name="address" type="tns:PostalAddress" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="mailingAddress" type="tns:PostalAddressType"/>
      </xs:complexType>
      <xs:simpleType name="PostalAddressType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Home"/>
          <xs:enumeration value="Office"/>
          <xs:enumeration value="Other"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ProblemEntry">
        <xs:sequence>
          <xs:element name="element" type="xs:string" minOccurs="0"/>
          <xs:element ref="tns:code" minOccurs="0"/>
          <xs:element ref="tns:description" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProblemList">
        <xs:sequence>
          <xs:element name="entry" type="tns:ProblemEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Proxy">
        <xs:complexContent>
          <xs:extension base="tns:Authentication">
            <xs:sequence>
              <xs:element name="password" type="xs:string" minOccurs="0"/>
              <xs:element name="proxy" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProxyFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="folderType" type="tns:FolderType" minOccurs="0"/>
              <xs:element name="proxy" type="tns:NameAndEmail" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProxyUser">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element ref="tns:id" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProxyList">
        <xs:sequence>
          <xs:element name="proxy" type="tns:ProxyUser" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Query">
        <xs:sequence>
          <xs:element name="target" type="tns:QueryTargetList" minOccurs="0"/>
          <xs:element name="filter" type="tns:Filter" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="QueryFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="folderType" type="tns:FolderType" minOccurs="0"/>
              <xs:element name="query" type="tns:Query" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QueryTarget">
        <xs:sequence>
          <xs:element name="source" type="tns:SourceType"/>
          <xs:element name="info" type="tns:UserInfo"/>
          <xs:element name="container" type="tns:uid" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="QueryTargetList">
        <xs:sequence>
          <xs:element name="target" type="tns:QueryTarget" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RangeDays">
        <xs:sequence>
          <xs:element name="previous" type="xs:unsignedInt"/>
          <xs:element name="through" type="xs:unsignedInt"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Recipient">
        <xs:complexContent>
          <xs:extension base="tns:NameAndEmail">
            <xs:sequence>
              <xs:element name="distType" type="tns:DistributionType" minOccurs="0" default="TO"/>
              <xs:element name="recipType" type="tns:RecipientType" minOccurs="0" default="User"/>
              <xs:element name="recipientStatus" type="tns:RecipientStatus" minOccurs="0" maxOccurs="1"/>
              <xs:element ref="tns:acceptLevel" minOccurs="0"/>
              <xs:element name="domain" type="xs:string" minOccurs="0"/>
              <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
              <xs:element name="idomain" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecipientList">
        <xs:sequence>
          <xs:element name="recipient" type="tns:Recipient" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RecipientStatus">
        <xs:sequence>
          <xs:element name="delivered" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="undeliverable" type="tns:CommentStatus" minOccurs="0"/>
          <xs:element name="transferred" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="transferDelayed" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="transferFailed" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="downloaded" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="downloadedByThirdParty" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="retractRequested" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="retracted" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="opened" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="deleted" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="undeleted" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="purged" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="accepted" type="tns:CommentStatus" minOccurs="0"/>
          <xs:element name="declined" type="tns:CommentStatus" minOccurs="0"/>
          <xs:element name="replied" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="forwarded" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="shared" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="started" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="completed" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="incomplete" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="delegated" type="tns:DelegatedStatus" minOccurs="0"/>
          <xs:element name="delegateeStatus" type="tns:DelegateeStatus" minOccurs="0" maxOccurs="unbounded"/>
          <!-- USERID property specifies delegatee -->
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RecipientType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="User"/>
          <xs:enumeration value="Resource"/>
          <xs:enumeration value="PersonalGroup"/>
          <xs:enumeration value="SystemGroup"/>
          <xs:enumeration value="PersonalGroupMember"/>
          <xs:enumeration value="SystemGroupMember"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="RecurrenceDateType">
        <xs:sequence>
          <xs:element name="date" type="xs:date" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RecurrenceRule">
        <xs:annotation>
          <xs:documentation>
            This is the same logic as iCalendar (RFC 2445).
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="frequency" type="tns:Frequency" minOccurs="0"/>
          <xs:element name="count" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="until" type="xs:date" minOccurs="0"/>
          <xs:element name="interval" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="byDay" type="tns:DayOfYearWeekList" minOccurs="0"/>
          <xs:element name="byMonthDay" type="tns:DayOfMonthList" minOccurs="0"/>
          <xs:element name="byYearDay" type="tns:DayOfYearList" minOccurs="0"/>
          <xs:element name="byMonth" type="tns:MonthList" minOccurs="0"/>
          <xs:element name="bySetPos" type="tns:DayOfYearList" minOccurs="0"/>
          <xs:element name="honorRule" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReferenceInfo">
        <xs:sequence>
          <xs:element name="lastReferenceDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="referenceCount" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Resource">
        <xs:complexContent>
          <xs:extension base="tns:AddressBookItem">
            <xs:sequence>
              <xs:element name="phone" type="xs:string" minOccurs="0"/>
              <xs:element name="resourceType" type="xs:string" minOccurs="0"/>
              <xs:element ref="tns:email" minOccurs="0"/>
              <xs:element name="owner" type="tns:ItemRef" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="RetractType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="myMailbox"/>
          <xs:enumeration value="recipientMailboxes"/>
          <xs:enumeration value="allMailboxes"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ReturnNotification">
        <xs:annotation>
          <xs:documentation>
            A calendar item will have opened, accepted and decliened (not deleted)
            A box entry item will have opened and deleted
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="opened" type="tns:ReturnNotificationOptions" minOccurs="0"/>
          <xs:element name="deleted" type="tns:ReturnNotificationOptions" minOccurs="0"/>
          <xs:element name="accepted" type="tns:ReturnNotificationOptions" minOccurs="0"/>
          <xs:element name="declined" type="tns:ReturnNotificationOptions" minOccurs="0"/>
          <xs:element name="completed" type="tns:ReturnNotificationOptions" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReturnNotificationOptions">
        <xs:sequence>
          <xs:element name="mail" type="xs:boolean" default="0" minOccurs="0"/>
          <xs:element name="notify" type="xs:boolean" default="0" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Rights">
        <xs:all>
          <xs:element name="read" type="xs:boolean" minOccurs="0"/>
          <xs:element name="add" type="xs:boolean" minOccurs="0"/>
          <xs:element name="edit" type="xs:boolean" minOccurs="0"/>
          <xs:element name="delete" type="xs:boolean" minOccurs="0"/>
          <xs:element name="share" type="xs:boolean" minOccurs="0"/>
          <xs:element name="manage" type="xs:boolean" minOccurs="0"/>
        </xs:all>
      </xs:complexType>
      <xs:complexType name="Rule">
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element name="execution" type="tns:Execution" minOccurs="0"/>
              <xs:element ref="tns:sequence" minOccurs="0"/>
              <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
              <xs:element name="types" type="xs:string" minOccurs="0"/>
              <xs:element name="source" type="xs:string" minOccurs="0"/>
              <xs:element name="conflict" type="tns:AppointmentConflict" minOccurs="0" default="Ignore"/>
              <xs:element name="filter" type="tns:Filter" minOccurs="0"/>
              <xs:element name="actions" type="tns:RuleActionList" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RuleAction">
        <xs:sequence>
          <xs:element name="type" type="tns:RuleActionType"/>
          <xs:element name="container" type="tns:uid" minOccurs="0"/>
          <xs:element name="item" type="tns:Mail" minOccurs="0"/>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element ref="tns:acceptLevel" minOccurs="0"/>
          <xs:element name="categories" type="tns:CategoryRefList" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RuleActionList">
        <xs:sequence>
          <xs:element name="action" type="tns:RuleAction" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RuleActionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Accept"/>
          <xs:enumeration value="Archive"/>
          <xs:enumeration value="Category"/>
          <xs:enumeration value="Delegate"/>
          <xs:enumeration value="Delete"/>
          <xs:enumeration value="Forward"/>
          <xs:enumeration value="Link"/>
          <xs:enumeration value="MarkPrivate"/>
          <xs:enumeration value="MarkRead"/>
          <xs:enumeration value="MarkUnread"/>
          <xs:enumeration value="Move"/>
          <xs:enumeration value="Purge"/>
          <xs:enumeration value="Reply"/>
          <xs:enumeration value="ReplyWithText"/>
          <xs:enumeration value="Send"/>
          <xs:enumeration value="StopRules"/>
          <xs:enumeration value="FlatForward"/>
          <xs:enumeration value="SimpleForward"/>
          <xs:enumeration value="Unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="RuleList">
        <xs:sequence>
          <xs:element name="rule" type="tns:Rule" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SendOptionsRequestReply">
        <xs:sequence>
          <xs:element name="whenConvenient" type="xs:boolean" minOccurs="0"/>
          <xs:element name="byDate" type="xs:dateTime" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SendOptions">
        <xs:sequence>
          <xs:element name="requestReply" type="tns:SendOptionsRequestReply" minOccurs="0"/>
          <xs:element name="mimeEncoding" type="xs:string" minOccurs="0"/>
          <xs:element name="statusTracking" type="tns:StatusTracking" minOccurs="0"/>
          <xs:element name="statusTrackingFlags" type="tns:StatusTrackingFlags" minOccurs="0"/>
          <xs:element name="notification" type="tns:ReturnNotification" minOccurs="0"/>
          <xs:element name="updateFrequentContacts" type="xs:boolean" minOccurs="0" default="1"/>
          <xs:element name="workFlow" type="xs:boolean" minOccurs="0"/>
          <xs:element name="notifyRecipients" type="xs:boolean" minOccurs="0"/>
          <xs:element name="internetStatusTracking" type="tns:InternetStatusTracking" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SendTotals">
        <xs:sequence>
          <xs:element name="accepted" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="alarm" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="completed" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="delegated" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="delivered" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="downloaded" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="forwarded" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="hidden" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="moved" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="noMoreStatus" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="opened" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="private" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="probed" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="purged" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="read" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="replied" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="retracted" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="retractRequested" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="started" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="totalUsers" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="transferred" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="transferFailed" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="undeliverable" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="undeliverableUsers" type="xs:unsignedInt" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Server">
        <xs:sequence>
          <xs:element name="host" type="tns:Host" minOccurs="0"/>
          <xs:element name="flags" type="tns:ServerFlags" minOccurs="0"/>
          <xs:element name="userid" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServerFlags">
        <xs:sequence>
          <xs:element name="savePassword" type="xs:boolean" minOccurs="0"/>
          <xs:element name="useIncomingAuth" type="xs:boolean" minOccurs="0"/>
          <xs:element name="secureConnection" type="xs:boolean" minOccurs="0"/>
          <xs:element name="authRequired" type="xs:boolean" minOccurs="0"/>
          <xs:element name="IMAP_ACL" type="xs:boolean" minOccurs="0"/>
          <xs:element name="netMail" type="xs:boolean" minOccurs="0"/>
          <xs:element name="SSLRequired" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Settings">
        <xs:sequence>
          <xs:element name="group" type="tns:SettingsGroup" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="setting" type="tns:Custom" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SettingsGroup">
        <xs:sequence>
          <xs:element name="setting" type="tns:Custom" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="SettingsList">
        <xs:sequence>
          <xs:element name="setting" type="tns:Custom" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SharedBook">
        <xs:complexContent>
          <xs:extension base="tns:AddressBook">
            <xs:sequence>
              <xs:element ref="tns:rights" minOccurs="0"/>
              <xs:element name="acl" type="tns:FolderACL" minOccurs="0"/>
              <xs:element name="owner" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="isSharedByMe" type="xs:boolean" minOccurs="0"/>
              <xs:element name="isSharedToMe" type="xs:boolean" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SharedFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element ref="tns:rights" minOccurs="0"/>
              <xs:element name="acl" type="tns:FolderACL" minOccurs="0"/>
              <xs:element name="owner" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="isSharedByMe" type="xs:boolean" minOccurs="0"/>
              <xs:element name="isSharedToMe" type="xs:boolean" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SharedFolderNotification">
        <xs:sequence>
          <xs:element ref="tns:subject" minOccurs="0"/>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element ref="tns:description" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SharedNotification">
        <xs:complexContent>
          <xs:extension base="tns:Mail">
            <xs:sequence>
              <xs:element name="notification" type="tns:NotificationType" minOccurs="1"/>
              <xs:element ref="tns:description" minOccurs="0"/>
              <xs:element ref="tns:rights" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Signature">
        <xs:sequence>
          <xs:element name="id" type="tns:uid" minOccurs="0"/>
          <xs:element ref="tns:name" minOccurs="0"/>
          <xs:element name="default" type="xs:boolean" default="0" minOccurs="0"/>
          <xs:element name="part" type="tns:SignatureData" minOccurs="0"/>
          <xs:element name="global" type="xs:boolean" default="0" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Signatures">
        <xs:sequence>
          <xs:element name="signature" type="tns:Signature" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="setting" type="tns:SignatureSettings" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SignatureData">
        <xs:sequence>
          <xs:element name="size" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SignatureSettings">
        <xs:sequence>
          <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="add" type="tns:SignatureType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SignatureType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Automatic"/>
          <xs:enumeration value="Prompt"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SMimeOperation">
        <xs:sequence>
          <xs:element name="signed" type="xs:boolean" minOccurs="0"/>
          <xs:element name="encrypted" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Sort">
        <xs:sequence>
          <xs:element name="type" type="tns:SortType"/>
          <xs:element name="field" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SortType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Ascending"/>
          <xs:enumeration value="Descending"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Library"/>
          <xs:enumeration value="User"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Status">
        <xs:sequence>
          <xs:element ref="tns:code"/>
          <xs:element ref="tns:description" minOccurs="0"/>
          <xs:element name="info" type="xs:string" minOccurs="0"/>
          <xs:element name="problems" type="tns:ProblemList" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatusTracking">
        <xs:simpleContent>
          <xs:extension base="tns:StatusTrackingOptions">
            <xs:attribute name="autoDelete" type="xs:boolean" default="0"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="StatusTrackingFlags">
        <xs:sequence>
          <xs:element name="delivered" type="xs:boolean" minOccurs="0"/>
          <xs:element name="hostDeleted" type="xs:boolean" minOccurs="0"/>
          <xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
          <xs:element name="opened" type="xs:boolean" minOccurs="0"/>
          <xs:element name="full" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusTrackingOptions">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Delivered"/>
          <xs:enumeration value="DeliveredAndOpened"/>
          <xs:enumeration value="All"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Subscribe">
        <xs:sequence>
          <xs:element name="alarm" type="xs:boolean" minOccurs="0"/>
          <xs:element name="notification" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SystemFolder">
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="isSystemFolder" type="xs:boolean" minOccurs="0"/>
              <xs:element name="folderType" minOccurs="0" type="tns:FolderType"/>
              <xs:element name="acl" type="tns:FolderACL" minOccurs="0"/>
              <xs:element name="isSharedByMe" type="xs:boolean" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Task">
        <xs:complexContent>
          <xs:extension base="tns:CalendarItem">
            <xs:sequence>
              <xs:element name="startDate" type="xs:date" minOccurs="0"/>
              <xs:element name="dueDate" type="xs:date" minOccurs="0"/>
              <xs:element name="assignedDate" type="xs:date" minOccurs="0"/>
              <xs:element name="taskPriority" type="xs:string" minOccurs="0"/>
              <xs:element name="completed" type="xs:boolean" minOccurs="0"/>
              <xs:element name="timezone" type="tns:Timezone" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="TextCase">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Lower"/>
          <xs:enumeration value="Mixed"/>
          <xs:enumeration value="Upper"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="TextLines">
        <xs:sequence>
          <xs:element name="line" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Timezone">
        <xs:sequence>
          <xs:element name="id" type="xs:string" minOccurs="0"/>
          <xs:element ref="tns:description" minOccurs="0"/>
          <xs:element name="daylight" type="tns:TimezoneComponent" minOccurs="0" maxOccurs="1"/>
          <xs:element name="standard" type="tns:TimezoneComponent" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TimezoneComponent">
        <xs:sequence>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="month" type="tns:Month" minOccurs="0"/>
          <xs:element name="day" type="tns:Day" minOccurs="0"/>
          <xs:element name="dayOfWeek" type="tns:DayOfWeek" minOccurs="0"/>
          <xs:element name="hour" type="tns:Hour" minOccurs="0"/>
          <xs:element name="minute" type="tns:Minute" minOccurs="0"/>
          <xs:element name="offset" type="tns:GMTOffset"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TimezoneList">
        <xs:sequence>
          <xs:element name="timezone" type="tns:Timezone" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TrustedApplication">
        <xs:complexContent>
          <xs:extension base="tns:Authentication">
            <xs:sequence>
              <xs:element name="proxy" type="xs:string" minOccurs="0"/>
              <xs:element name="name" type="xs:string"/>
              <xs:element name="key" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="uid">
        <xs:annotation>
          <xs:documentation>
            The unique identifier is a application defined
            string to uniquely identify an item. The string
            can optionally consist of two parts. The first
            part identifies a unique existence of an item.
            The second part of the string optionally specifies
            instance information. The first and second part of
            the ID are separated by an '@'. For this reason
            neither the first nor second part can contain an
            '@' symbol.

            To determine whether or not two items are the
            same item, the consumer of this API should
            compare the first part of the ids of the two
            items (i.e. all of the id up to the @ symbol).
          </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+(@*)?"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="UserContactFolder">
        <xs:annotation>
          <xs:documentation>
            The UserContactFolder specifies folders that are personal
            address books that sit below the system contacts folder.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:Folder">
            <xs:sequence>
              <xs:element name="folderType" type="tns:FolderType" minOccurs="0"/>
              <xs:element name="addressBook" type="tns:uid" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserInfo">
        <xs:sequence>
          <xs:element ref="tns:name" minOccurs="0"/>
          <xs:element ref="tns:email" minOccurs="0"/>
          <xs:element ref="tns:uuid" minOccurs="0"/>
          <xs:element name="userid" type="xs:string" minOccurs="0"/>
          <xs:element name="domain" type="xs:string" minOccurs="0"/>
          <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
          <xs:element name="system" type="xs:string" minOccurs="0"/>
          <xs:element name="fid" type="xs:string" minOccurs="0"/>
          <xs:element name="recipType" type="tns:RecipientType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="disabled" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="UserList">
        <xs:sequence>
          <xs:element name="user" type="tns:UserInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UUID">
        <xs:annotation>
          <xs:documentation>
            The UUID is the unique user ID on a given
            email system. This is used in various
            places to indicate that a sender or recipient
            is an user internal to the collaboration
            system instead of an external user (i.e.
            internet address).
          </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:complexType name="Version">
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element name="library" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="documentNumber" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="versionCreator" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="retrievedBy" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="retrievedDate" type="xs:dateTime" minOccurs="0"/>
              <xs:element name="versionNumber" type="xs:unsignedInt"/>
              <xs:element name="versionDescription" type="xs:string" minOccurs="0"/>
              <xs:element name="versionStatus" type="tns:VersionStatus" minOccurs="0"/>
              <xs:element name="life" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="ageAction" type="tns:AgeAction" minOccurs="0"/>
              <xs:element name="fileSize" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="filename" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="VersionEvent">
        <xs:complexContent>
          <xs:extension base="tns:ContainerItem">
            <xs:sequence>
              <xs:element name="library" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="documentNumber" type="xs:unsignedInt"/>
              <xs:element name="versionNumber" type="xs:unsignedInt"/>
              <xs:element name="creator" type="tns:NameAndEmail" minOccurs="0"/>
              <xs:element name="event" type="tns:VersionEventType"/>
              <xs:element name="eventNumber" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="filename" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="VersionEventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="archive"/>
          <xs:enumeration value="checkIn"/>
          <xs:enumeration value="checkOut"/>
          <xs:enumeration value="copyIn"/>
          <xs:enumeration value="copyOut"/>
          <xs:enumeration value="copyVersion"/>
          <xs:enumeration value="created"/>
          <xs:enumeration value="deleteVersion"/>
          <xs:enumeration value="endAccess"/>
          <xs:enumeration value="resetStatus"/>
          <xs:enumeration value="restore"/>
          <xs:enumeration value="retrieve"/>
          <xs:enumeration value="securityModified"/>
          <xs:enumeration value="versionDownloaded"/>
          <xs:enumeration value="viewed"/>
          <xs:enumeration value="unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VersionStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="available"/>
          <xs:enumeration value="checkedOut"/>
          <xs:enumeration value="inUse"/>
          <xs:enumeration value="deleted"/>
          <xs:enumeration value="archived"/>
          <xs:enumeration value="massInUse"/>
          <xs:enumeration value="unavailable"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ViewType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="details"/>
          <xs:enumeration value="largeIcons"/>
          <xs:enumeration value="smallIcon"/>
          <xs:enumeration value="list"/>
          <xs:enumeration value="discussion"/>
          <xs:enumeration value="calendar"/>
          <xs:enumeration value="tasklist"/>
          <xs:enumeration value="panel"/>
          <xs:enumeration value="addressCards"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Visibility">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PostOffice"/>
          <xs:enumeration value="Domain"/>
          <xs:enumeration value="System"/>
          <xs:enumeration value="Unlisted"/>
          <xs:enumeration value="Unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="WebAccessSettings">
        <xs:complexContent>
          <xs:extension base="tns:Item">
            <xs:sequence>
              <xs:element name="timezone" type="xs:base64Binary" minOccurs="0"/>
              <xs:element name="timezoneId" type="xs:int" minOccurs="0"/>
              <xs:element name="timezoneMatches" type="xs:base64Binary" minOccurs="0"/>
              <xs:element name="language" type="xs:language" minOccurs="0"/>
              <xs:element name="general" type="xs:base64Binary" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="WeekDay">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Sunday"/>
          <xs:enumeration value="Monday"/>
          <xs:enumeration value="Tuesday"/>
          <xs:enumeration value="Wednesday"/>
          <xs:enumeration value="Thursday"/>
          <xs:enumeration value="Friday"/>
          <xs:enumeration value="Saturday"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WeekOfYear">
        <xs:restriction base="xs:short">
          <xs:minInclusive value="-53"/>
          <xs:maxInclusive value="53"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.novell.com/2005/01/GroupWise/methods"
               elementFormDefault="qualified" xmlns="http://schemas.novell.com/2005/01/GroupWise/methods"
               xmlns:types="http://schemas.novell.com/2005/01/GroupWise/types" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <xs:element name="acceptRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="comment" type="xs:string" minOccurs="0"/>
            <xs:element name="acceptLevel" type="types:AcceptLevel" minOccurs="0"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="alarm" type="types:Alarm" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="acceptResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="acceptShareRequest">
        <xs:annotation>
          <xs:documentation>
            If name is not present, the original name value from the
            notification message will be used.
            A container is requied for accepting a shared folder notification.
            It is the container id of the parent folder under which the new
            folder will be placed.
            If container is not present, the shared folder will be put
            under the Cabinet folder.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="name" type="xs:string" minOccurs="0"/>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element ref="types:description" minOccurs="0"/>
            <xs:element ref="types:sequence" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="acceptShareResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addMembersRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="members" type="types:GroupMemberList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="archiveRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="path" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="archiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="path" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="closeFreeBusySessionRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="freeBusySessionId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="closeFreeBusySessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="completeRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="completeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createCursorRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="filter" type="types:Filter" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createCursorResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="cursor" type="xs:int" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item"/>
            <xs:element name="notification" type="types:SharedFolderNotification" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createJunkEntryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" type="types:JunkEntry"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createJunkEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createNotifyRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" type="types:NotifyEntry"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createNotifyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createProxyAccessRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" type="types:AccessRightEntry"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createProxyAccessResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createSignatureRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="signature" type="types:Signature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createSignatureResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="declineRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="comment" type="xs:string" minOccurs="0"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="declineResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="delegateRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="commentToOrganizer" type="xs:string" minOccurs="0"/>
            <xs:element name="commentToDelegatee" type="xs:string" minOccurs="0"/>
            <xs:element name="distribution" type="types:Distribution"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="attachments" type="types:AttachmentInfo" minOccurs="0"/>
            <xs:element name="link" type="types:LinkInfo" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="delegateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="destroyCursorRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="cursor" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="destroyCursorResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executeRuleRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executeRuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="forwardRequest">
        <xs:annotation>
          <xs:documentation>
            Forwarding a message is a two step process.
            First you call the method with the id of the original item.
            A new mail item is returned.
            It has the orignal subject.
            The caller is responsible to prepend "Fwd:" or what ever they
            want to modify the original subject.
            If the caller wants the original message body returned, they need
            to supply message or message/RTF in the view.
            It is up to the caller to modify the message body in any way.
            When all of the changes to the returned mail item are complete,
            the caller would then call sendRequest with the new mail item.
            A linkInfo element is return in the mail item. That element needs
            to be passed unchanged in the sendRequest.
            If the caller wants to send the original item as an attachment to
            the new mail item, the caller would pass the 'embed' element in the
            forwardRequest.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="embed" type="xs:boolean" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="forwardResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getAccountListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="accounts" type="types:ItemList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAddressBookListRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="name" type="xs:string" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAddressBookListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="books" type="types:AddressBookList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getArchiveItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="filter" type="types:Filter" minOccurs="0"/>
            <xs:element name="items" type="types:ItemRefList" minOccurs="0" maxOccurs="1"/>
            <xs:element name="count" type="xs:int" default="-1"/>
            <xs:element name="path" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getArchiveItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:Items" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttachmentRequest">
        <xs:annotation>
          <xs:documentation>
            This work only for file attachments.
            If you try to specify an embedded item, you will get an error.
            If you specify offset = 0 and length = -1,
            you will receive the whole attachment.
            You can supply other values for offset and length to receive
            a part of the attachment.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="offset" type="xs:int"/>
            <xs:element name="length" type="xs:int"/>
            <xs:element name="flags" type="types:AttachmentFlags" minOccurs="0" maxOccurs="2"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttachmentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="part" type="types:MessagePart" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCategoryListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getCategoryListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="categories" type="types:CategoryList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContactHistoryFilterRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContactHistoryFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="filter" type="types:Filter" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomListRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="library" type="types:uid" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="customs" type="types:CustomList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeltasRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:annotation>
              <xs:documentation>
                container: The only valid container at this time is the GroupWise System Address book uid.
                view: This is the view for the items that are returned.
              </xs:documentation>
            </xs:annotation>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="deltaInfo" type="types:DeltaInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeltasResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:Items" minOccurs="0"/>
            <xs:element name="deltaInfo" type="types:DeltaInfo" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeltaInfoRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:annotation>
              <xs:documentation>
                The only valid container at this time is the GroupWise System Address book uid.
              </xs:documentation>
            </xs:annotation>
            <xs:element name="container" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeltaInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deltaInfo" type="types:DeltaInfo" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDiskSpaceUsageRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getDiskSpaceUsageResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="diskUsage" type="types:DiskSpaceUsage" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDocumentTypeListRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="library" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDocumentTypeListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:DocumentTypeList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="folderType" type="types:FolderType" minOccurs="0"/>
            <xs:element name="types" type="xs:string" minOccurs="0"/>
            <xs:element name="source" type="xs:string" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="folder" type="types:Folder" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderListRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="parent" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="recurse" type="xs:boolean"/>
            <xs:element name="imap" type="xs:boolean" default="0"/>
            <xs:element name="nntp" type="xs:boolean" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="folders" type="types:FolderList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFreeBusyRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="freeBusySessionId" type="xs:string"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFreeBusyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="freeBusyStats" type="types:FreeBusyStats" minOccurs="0"/>
            <xs:element name="freeBusyInfo" type="types:FreeBusyInfoList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="filter" type="types:Filter" minOccurs="0"/>
            <xs:element name="items" type="types:ItemRefList" minOccurs="0" maxOccurs="1"/>
            <xs:element name="count" type="xs:int" default="-1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:Items" minOccurs="0"/>
            <xs:element name="sids" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJunkEntriesRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:JunkHandlingListType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJunkEntriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="junk" type="types:JunkHandlingList" minOccurs="0"/>
            <xs:element name="block" type="types:JunkHandlingList" minOccurs="0"/>
            <xs:element name="trust" type="types:JunkHandlingList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJunkMailSettingsRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getJunkMailSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="settings" type="types:SettingsList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLibraryItemRequest">
        <xs:annotation>
          <xs:documentation>
            This method will get a library, document or version object
            depending on the arguments passed in.
            versionNumber is a string.
            It can take "current", "official" or a specific version number.
            To get a version object, you must also supply a document number.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="library" type="types:uid"/>
            <xs:element name="documentNumber" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="versionNumber" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLibraryItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLibraryListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getLibraryListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="libraries" type="types:LibraryList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMemberOfRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userid" type="xs:string" minOccurs="0"/>
            <xs:element name="postOffice" type="xs:string" minOccurs="0"/>
            <xs:element name="domain" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMemberOfResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="group" type="types:Owner" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNotifyListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getNotifyListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="list" type="types:NotifyList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getQuickMessagesRequest">
        <xs:annotation>
          <xs:documentation>
            This method provides a quicker access to mail items.
            It does this by only access fields that are stored in the
            database index. The fields in the index are: id, status, modified,
            container, message type, categories, subject, orignalSubject, and
            source.
            The New list is the fastest access.
            The Modified list is slower.
            The All list is the slowest.
            If you pass a startDate, the test is for any item that is newer
            or equal to that date.
            If you don't pass a container string. The query will be across
            all folders.
            If you don't pass a types list, the query will be for all message
            types unless the container is the Calendar folder. In that case
            the default will be "CalendarItem. "CalendarItem" is a special
            case it represents Appointment, Note and Task.
            You can select the source types you want to see. If you don't
            specify a source, you will get received, draft and personal.
            If you don't specify a view, the above fields will be returned.
            If you specify other fields than the above fields, they will not
            be returned.
            You can restrict the number of items return by specifying a count.
            All items will be returned if no count is given.
            In the case of searching for items, the new startDate will be
            returned for use in the next call to getQuickMessagesRequest.
            The startDate is the time value before this read was performed.

          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="list" type="types:MessageList"/>
            <xs:element ref="types:startDate" minOccurs="0"/>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="types" type="xs:string" minOccurs="0"/>
            <xs:element name="source" type="xs:string" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="count" type="xs:int" default="-1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getQuickMessagesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="types:startDate" minOccurs="0"/>
            <xs:element name="items" type="types:Items" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProxyAccessListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getProxyAccessListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="accessRights" type="types:AccessRightList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProxyListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getProxyListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="proxies" type="types:ProxyList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRuleListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getRuleListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="rules" type="types:RuleList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSettingsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string" minOccurs="0"/>
            <xs:element name="reload" type="xs:boolean" default="0" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="settings" type="types:Settings" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSignaturesRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="global" type="xs:boolean" default="0" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSignaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="signatures" type="types:Signatures" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStringRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:unsignedInt"/>
            <xs:element name="language" type="xs:language" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStringResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="value" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTimestampRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="backup" type="xs:boolean" minOccurs="0"/>
            <xs:element name="retention" type="xs:boolean" minOccurs="0"/>
            <xs:element name="noop" type="xs:boolean" minOccurs="0"/>
            <xs:element name="retentionModified" type="xs:boolean" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTimestampResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="backup" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="retention" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="retentionModified" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTimezoneListRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getTimezoneListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="timezones" type="types:TimezoneList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUnreadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="types:startDate" minOccurs="0"/>
            <xs:element name="types" type="xs:string" minOccurs="0"/>
            <xs:element name="source" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUnreadResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sids" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="name" type="xs:string" minOccurs="0"/>
            <xs:element name="key" type="xs:string" minOccurs="0"/>
            <xs:element name="noop" type="xs:boolean" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="users" type="types:UserList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="loginRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="auth" type="types:Authentication"/>
            <xs:element name="language" type="xs:language"/>
            <xs:element name="version" type="xs:decimal"/>
            <xs:element name="application" type="xs:string" minOccurs="0"/>
            <xs:element name="userid" type="xs:boolean" minOccurs="0"/>
            <xs:element name="system" type="xs:boolean" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="loginResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="session" type="xs:string" minOccurs="0"/>
            <xs:element name="userinfo" type="types:UserInfo" minOccurs="0"/>
            <xs:element name="entry" type="types:AccessRightEntry" minOccurs="0"/>
            <xs:element name="gwVersion" type="xs:string" minOccurs="0"/>
            <xs:element name="build" type="xs:string" minOccurs="0"/>
            <xs:element name="redirectToHost" type="types:Host" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="serverUTCTime" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="logoutRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="logoutResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markPrivateRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markPrivateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markReadResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markUnPrivateRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markUnPrivateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markUnReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="markUnReadResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="notification" type="types:SharedFolderNotification" minOccurs="0"/>
            <xs:element name="updates" type="types:ItemChanges"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="types:modified" minOccurs="0"/>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:ModifyItem" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="types:modified" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyJunkEntryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" type="types:JunkEntry"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyJunkEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyJunkMailSettingsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="settings" type="types:SettingsList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyJunkMailSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyNotifyRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="updates" type="types:NotifyEntryChanges"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyNotifyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyPasswordRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="old" type="xs:string" minOccurs="0"/>
            <xs:element name="new" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyPasswordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyProxyAccessRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="updates" type="types:AccessRightChanges"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifyProxyAccessResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifySettingsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="settings" type="types:SettingsList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifySettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifySignaturesRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="updates" type="types:Signatures"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modifySignaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveItemRequest">
        <xs:annotation>
          <xs:documentation>
            This method will link (copy) or move items into the container.
            To do a link (copy) do not supply a from container.
            To move item(s) from one container to another supply the from
            container id.
            To order the item in the checklist folder, you can also supply
            the before and / or after elements.
            If you are just moving the item within the checklist folder,
            you do not supply the container element.
            If you supply item id's for before and after, the item will
            be positioned between the two items.
            If you do not supply values for before and after, the item
            will be placed last in the checklist folder.
            There are special values useds as helpers. "first" can be
            used in before to place the item first in the list. "last"
            can be placed in after to place the item last in the list.
            The under element controls making an item a subtask item.
            The item referenced by id will be put under the item
            identified by under.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="from" type="types:uid" minOccurs="0"/>
            <xs:element name="before" type="types:uid" minOccurs="0"/>
            <xs:element name="after" type="types:uid" minOccurs="0"/>
            <xs:element name="under" type="types:uid" minOccurs="0"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:MoveItem" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pollRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sequence" type="xs:int" minOccurs="0"/>
            <xs:element name="notify" type="types:PollNotify" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pollResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sequence" type="xs:int" minOccurs="0"/>
            <xs:element name="list" type="types:PollInfoList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="positionCursorRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="cursor" type="xs:int"/>
            <xs:element name="seek" type="types:CursorSeek"/>
            <xs:element name="offset" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="positionCursorResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="purgeDeletedItemsRequest">
        <xs:annotation>
          <xs:documentation>
            This method permanently deletes all items that were previously
            marked for deletion (i.e. stored in the "Trash").
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="purgeDeletedItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="purgeRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="force" type="xs:boolean" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="purgeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="readCursorRequest">
        <xs:annotation>
          <xs:documentation>
            If "start" or "end" is passed in "position", the value for "forward"
            is ignored.
            "start" will read from the start of the database going forward.
            "end" will read from the end of the database going backward.
            If you are making multiple calls to readCursorRequest, "position"
            should either be "current" or not present after the first call.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="cursor" type="xs:int"/>
            <xs:element name="forward" type="xs:boolean" default="1"/>
            <xs:element name="position" type="types:CursorSeek" minOccurs="0" default="current"/>
            <xs:element name="count" type="xs:int" minOccurs="0" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="readCursorResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeCustomDefinitionRequest">
        <xs:annotation>
          <xs:documentation>
            This method remove the custom field defintion not the field and
            values within an item.
            To delete custom defintions from personal address book entries, set
            books = "1", else the definition will be deleted from mail items.
            This method can take a long time to execute.
            You can set doAsynchronous to have the custom field definition
            removed in the background.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="customs" type="types:CustomList" minOccurs="0"/>
            <xs:element name="books" type="xs:boolean" default="0"/>
            <xs:element name="doAsynchronous" type="xs:boolean" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeCustomDefinitionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeItemRequest">
        <xs:annotation>
          <xs:documentation>
            If the container is not specified then the item is
            removed from all of the containers that it is linked
            to and is stored in the "Trash".
            If the container is specified then the item is only
            removed from that specific container and it's link
            is stored in the "Trash".
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeItemsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="recurrenceAllInstances" type="xs:unsignedInt" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeItemsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeJunkEntryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeJunkEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeMembersRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid"/>
            <xs:element name="members" type="types:GroupMemberList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeNotifyRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeNotifyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProxyAccessRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProxyAccessResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProxyUserRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProxyUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSignatureRequest">
        <xs:annotation>
          <xs:documentation>
            The signature will be purged when remove
            request completed. The missing id node
            when it is not delete all signatures
            indicates the removing of plain text signature
            which resides in user's settings record.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="all" type="xs:boolean" minOccurs="0"/>
            <xs:element name="global" type="xs:boolean" default="0" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSignatureResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="replyRequest">
        <xs:annotation>
          <xs:documentation>
            Replying to a message is a two step process.
            First you call the method with the id of the original item.
            A new mail item is returned.
            It has the orignal subject.
            The caller is responsible to prepend "Re:" or what ever they
            want to modify the original subject.
            If the caller wants the original message body returned, they need
            to supply message or message/RTF in the view.
            It is up to the caller to modify the message body in any way.
            When all of the changes to the returned mail item are complete,
            the caller would then call sendRequest with the new mail item.
            If the caller wants to reply to all recipients of the original
            item, the caller needs to pass recipients in the view.
            If recipients is not in the view, the response will be addressed
            to the original sender.
            A linkInfo element is return in the mail item. That element needs
            to be passed unchanged in the sendRequest.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="replyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendRequest">
        <xs:annotation>
          <xs:documentation>
            Resending a message is a two step process.
            First you call the method with the id of the original item.
            A new mail item is returned.
            If the caller wants the original message body returned, they need
            to supply message or message/RTF in the view.
            When all of the changes to the returned mail item are complete,
            the caller would then call sendRequest with the new mail item.
            A linkInfo element is return in the mail item. That element needs
            to be passed unchanged in the sendRequest.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resolveRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="recipients" type="types:RecipientList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resolveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="recipients" type="types:RecipientList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="item" type="types:Item"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retractRequest">
        <xs:annotation>
          <xs:documentation>
            If a recipient has opened or accepted a Calendar item, a notice
            will be placed in the recipient's in-box when the item is
            retracted. The notice can be affected by the following options:

            "comment": The comment will be included in the notice.
            "retractCausedByResend": When TRUE, the notice will be suppressed
            in lieu of the 'new' calendar item that will be delivered to
            the recipient.
            "retractingAllInstances": When TRUE, a single notice will be
            placed in the recipient's in-box (instead of a notice for each auto-date
            instance).

            If no retractType is specified, the default is recipientMailboxes.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="comment" type="xs:string" minOccurs="0"/>
            <xs:element name="retractingAllInstances" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="retractCausedByResend" type="xs:boolean" minOccurs="0"/>
            <xs:element name="retractType" type="types:RetractType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retractResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="types:Item"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setTimestampRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="backup" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="retention" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="retentionModified" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setTimestampResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startFreeBusySessionRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="users" type="types:FreeBusyUserList"/>
            <xs:element name="startDate" type="xs:dateTime"/>
            <xs:element name="endDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startFreeBusySessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="freeBusySessionId" type="xs:int" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="streamedSearchRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="container" type="types:uid" minOccurs="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
            <xs:element name="filter" type="types:Filter" minOccurs="0"/>
            <xs:element name="count" type="xs:int" default="-1"/>
            <xs:element name="lastHitId" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="streamedSearchResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:Items" minOccurs="0"/>
            <xs:element name="lastHitId" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stubItemRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="archiveId" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stubItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unacceptRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unacceptResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unarchiveRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
            <xs:element name="path" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unarchiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="path" type="xs:string" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uncompleteRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="items" type="types:ItemRefList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uncompleteResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateVersionStatusRequest">
        <xs:annotation>
          <xs:documentation>
            The only version event types support are:
            checkIn
            checkOut
            resetStatus
            viewed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="types:uid"/>
            <xs:element name="event" type="types:VersionEventType"/>
            <xs:element name="part" type="types:SignatureData" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateVersionStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="part" type="types:SignatureData" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.novell.com/2005/01/GroupWise/events"
               elementFormDefault="qualified" xmlns="http://schemas.novell.com/2005/01/GroupWise/events"
               xmlns:tns="http://schemas.novell.com/2005/01/GroupWise/events" xmlns:types="http://schemas.novell.com/2005/01/GroupWise/types">
      <xs:element name="key" type="xs:string"/>
      <xs:element name="event" type="tns:EventType"/>
      <xs:element name="field" type="xs:string"/>
      <xs:complexType name="ContainerList">
        <xs:sequence>
          <xs:element name="container" type="types:uid" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="not" type="xs:boolean" default="0"/>
      </xs:complexType>
      <xs:complexType name="Event">
        <xs:sequence>
          <xs:element ref="tns:event"/>
          <xs:element name="id" type="types:uid" minOccurs="0"/>
          <xs:element name="sid" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
          <xs:element ref="tns:field" minOccurs="0"/>
          <xs:element name="container" type="types:uid" minOccurs="0"/>
          <xs:element name="from" type="types:uid" minOccurs="0"/>
          <xs:element name="key" type="xs:string" minOccurs="0"/>
          <xs:element name="uid" type="xs:unsignedInt" minOccurs="0"/>
          <xs:element name="type" type="tns:ItemType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EventDefinition">
        <xs:sequence>
          <xs:element name="events" type="tns:EventTypeList"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element ref="tns:field" minOccurs="0"/>
          <xs:element name="containers" type="tns:ContainerList" minOccurs="0"/>
          <xs:element name="subType" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EventList">
        <xs:sequence>
          <xs:element name="event" type="tns:Event" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Events">
        <xs:sequence>
          <xs:element ref="tns:key"/>
          <xs:element name="persistence" type="xs:duration" minOccurs="0"/>
          <xs:element name="ipAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="port" type="xs:int" minOccurs="0"/>
          <xs:element name="http" type="xs:boolean" minOccurs="0" default="0"/>
          <xs:element name="ignoreAfter" type="xs:duration" minOccurs="0"/>
          <xs:element name="definition" type="tns:EventDefinition" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="enabled" type="xs:boolean" default="0"/>
      </xs:complexType>
      <xs:complexType name="EventsList">
        <xs:sequence>
          <xs:element name="event" type="tns:Events" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="EventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AddressBookAdd"/>
          <xs:enumeration value="AddressBookDelete"/>
          <xs:enumeration value="AddressBookModify"/>
          <xs:enumeration value="AddressBookItemAdd"/>
          <xs:enumeration value="AddressBookItemDelete"/>
          <xs:enumeration value="AddressBookItemModify"/>
          <xs:enumeration value="FolderAccept"/>
          <xs:enumeration value="FolderAdd"/>
          <xs:enumeration value="FolderDelete"/>
          <xs:enumeration value="FolderItemAdd"/>
          <xs:enumeration value="FolderItemDelete"/>
          <xs:enumeration value="FolderItemMove"/>
          <xs:enumeration value="FolderModify"/>
          <xs:enumeration value="ItemAccept"/>
          <xs:enumeration value="ItemArchive"/>
          <xs:enumeration value="ItemComplete"/>
          <xs:enumeration value="ItemDecline"/>
          <xs:enumeration value="ItemDelete"/>
          <xs:enumeration value="ItemMarkPrivate"/>
          <xs:enumeration value="ItemMarkRead"/>
          <xs:enumeration value="ItemMarkUnread"/>
          <xs:enumeration value="ItemModify"/>
          <xs:enumeration value="ItemPurge"/>
          <xs:enumeration value="ItemUnarchive"/>
          <xs:enumeration value="ItemUndelete"/>
          <xs:enumeration value="Login"/>
          <xs:enumeration value="Logout"/>
          <xs:enumeration value="ProxyAccessAdd"/>
          <xs:enumeration value="ProxyAccessModify"/>
          <xs:enumeration value="ProxyAccessDelete"/>
          <xs:enumeration value="ProxyLogin"/>
          <xs:enumeration value="SessionTimedOut"/>
          <xs:enumeration value="TrustedApplicationLogin"/>
          <xs:enumeration value="ItemMarkUnprivate"/>
          <xs:enumeration value="ItemUnaccept"/>
          <xs:enumeration value="ItemUncomplete"/>
          <xs:enumeration value="PersonalGroupItemAdd"/>
          <xs:enumeration value="PersonalGroupItemDelete"/>
          <xs:enumeration value="UserMoveComplete"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="EventTypeList">
        <xs:sequence>
          <xs:element name="event" type="tns:EventType" minOccurs="1" maxOccurs="36"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Field">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AcceptLevel"/>
          <xs:enumeration value="Alarm"/>
          <xs:enumeration value="AllDayEvent"/>
          <xs:enumeration value="Attachment"/>
          <xs:enumeration value="Category"/>
          <xs:enumeration value="Checklist"/>
          <xs:enumeration value="Classification"/>
          <xs:enumeration value="Contact"/>
          <xs:enumeration value="DueDate"/>
          <xs:enumeration value="Duration"/>
          <xs:enumeration value="EmailAddress"/>
          <xs:enumeration value="ExpirationDate"/>
          <xs:enumeration value="Hidden"/>
          <xs:enumeration value="IMAddress"/>
          <xs:enumeration value="MessageBody"/>
          <xs:enumeration value="Name"/>
          <xs:enumeration value="Organization"/>
          <xs:enumeration value="Owner"/>
          <xs:enumeration value="Parent"/>
          <xs:enumeration value="PersonalSubject"/>
          <xs:enumeration value="PhoneNumber"/>
          <xs:enumeration value="Picture"/>
          <xs:enumeration value="Place"/>
          <xs:enumeration value="PostalAddress"/>
          <xs:enumeration value="RecipientStatus"/>
          <xs:enumeration value="Rights"/>
          <xs:enumeration value="Security"/>
          <xs:enumeration value="SendPriority"/>
          <xs:enumeration value="StartDate"/>
          <xs:enumeration value="Subject"/>
          <xs:enumeration value="TaskCategory"/>
          <xs:enumeration value="TaskPriority"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ItemType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AddressBookItem"/>
          <xs:enumeration value="Appointment"/>
          <xs:enumeration value="CalendarItem"/>
          <xs:enumeration value="Contact"/>
          <xs:enumeration value="Group"/>
          <xs:enumeration value="Mail"/>
          <xs:enumeration value="Note"/>
          <xs:enumeration value="Organization"/>
          <xs:enumeration value="PhoneMessage"/>
          <xs:enumeration value="Resource"/>
          <xs:enumeration value="Task"/>
          <xs:enumeration value="DocumentRef"/>
        </xs:restriction>
      </xs:simpleType>
      <!-- 
Applications can be notified by the POA when an event they have subscribed to occurs (a.k.a. slap).  
The object that is transported is defined by the Notify object.  There can be many notify instantances in one slap.  
The notification instances will be seperated by \r\n.  For example,

<notify><userid>username</userid><key>GWEvents</key></notify>\r\n
<notify><userid>username</userid><key>GWEvents</key></notify>\r\n
-->
      <xs:complexType name="Notify">
        <xs:sequence>
          <xs:element name="userid" type="xs:string" minOccurs="1"/>
          <xs:element ref="tns:key" minOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="cleanEventConfigurationRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="all" type="xs:boolean" default="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cleanEventConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureEventsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="events" type="tns:Events" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventConfigurationRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="key" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="events" type="tns:EventsList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:key"/>
            <xs:element name="from" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="until" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="uid" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="count" type="xs:int" default="-1"/>
            <xs:element name="remove" type="xs:boolean" default="0"/>
            <xs:element name="notify" type="xs:boolean" default="0"/>
            <xs:element name="view" type="xs:string" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="events" type="tns:EventList" minOccurs="0"/>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeEventConfigurationRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:key"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeEventConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeEventsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:key"/>
            <xs:element name="from" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="until" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="status" type="types:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="acceptRequestMessage">
    <part name="acceptReq" element="methods:acceptRequest"/>
  </message>
  <message name="acceptResponseMessage">
    <part name="acceptRes" element="methods:acceptResponse"/>
  </message>
  <message name="acceptShareRequestMessage">
    <part name="acceptShareReq" element="methods:acceptShareRequest"/>
  </message>
  <message name="acceptShareResponseMessage">
    <part name="acceptShareRes" element="methods:acceptShareResponse"/>
  </message>
  <message name="addItemRequestMessage">
    <part name="addItemReq" element="methods:addItemRequest"/>
  </message>
  <message name="addItemResponseMessage">
    <part name="addItemRes" element="methods:addItemResponse"/>
  </message>
  <message name="addItemsRequestMessage">
    <part name="addItemsReq" element="methods:addItemsRequest"/>
  </message>
  <message name="addItemsResponseMessage">
    <part name="addItemsRes" element="methods:addItemsResponse"/>
  </message>
  <message name="addMembersRequestMessage">
    <part name="addMembersReq" element="methods:addMembersRequest"/>
  </message>
  <message name="addMembersResponseMessage">
    <part name="addMembersRes" element="methods:addMembersResponse"/>
  </message>
  <message name="archiveRequestMessage">
    <part name="archiveReq" element="methods:archiveRequest"/>
  </message>
  <message name="archiveResponseMessage">
    <part name="archiveRes" element="methods:archiveResponse"/>
  </message>
  <message name="closeFreeBusySessionRequestMessage">
    <part name="closeFreeBusySessionReq" element="methods:closeFreeBusySessionRequest"/>
  </message>
  <message name="closeFreeBusySessionResponseMessage">
    <part name="closeFreeBusySessionRes" element="methods:closeFreeBusySessionResponse"/>
  </message>
  <message name="completeRequestMessage">
    <part name="completeReq" element="methods:completeRequest"/>
  </message>
  <message name="completeResponseMessage">
    <part name="completeRes" element="methods:completeResponse"/>
  </message>
  <message name="createCursorRequestMessage">
    <part name="createCursorReq" element="methods:createCursorRequest"/>
  </message>
  <message name="createCursorResponseMessage">
    <part name="createCursorRes" element="methods:createCursorResponse"/>
  </message>
  <message name="createItemRequestMessage">
    <part name="createItemReq" element="methods:createItemRequest"/>
  </message>
  <message name="createItemResponseMessage">
    <part name="createItemRes" element="methods:createItemResponse"/>
  </message>
  <message name="createItemsRequestMessage">
    <part name="createItemsReq" element="methods:createItemsRequest"/>
  </message>
  <message name="createItemsResponseMessage">
    <part name="createItemsRes" element="methods:createItemsResponse"/>
  </message>
  <message name="createJunkEntryRequestMessage">
    <part name="createJunkEntryReq" element="methods:createJunkEntryRequest"/>
  </message>
  <message name="createJunkEntryResponseMessage">
    <part name="createJunkEntryRes" element="methods:createJunkEntryResponse"/>
  </message>
  <message name="createNotifyRequestMessage">
    <part name="createNotifyReq" element="methods:createNotifyRequest"/>
  </message>
  <message name="createNotifyResponseMessage">
    <part name="createNotifyRes" element="methods:createNotifyResponse"/>
  </message>
  <message name="createProxyAccessRequestMessage">
    <part name="createProxyAccessReq" element="methods:createProxyAccessRequest"/>
  </message>
  <message name="createProxyAccessResponseMessage">
    <part name="createProxyAccessRes" element="methods:createProxyAccessResponse"/>
  </message>
  <message name="createSignatureRequestMessage">
    <part name="createSignatureReq" element="methods:createSignatureRequest"/>
  </message>
  <message name="createSignatureResponseMessage">
    <part name="createSignatureRes" element="methods:createSignatureResponse"/>
  </message>
  <message name="declineRequestMessage">
    <part name="declineReq" element="methods:declineRequest"/>
  </message>
  <message name="declineResponseMessage">
    <part name="declineRes" element="methods:declineResponse"/>
  </message>
  <message name="delegateRequestMessage">
    <part name="delegateReq" element="methods:delegateRequest"/>
  </message>
  <message name="delegateResponseMessage">
    <part name="delegateRes" element="methods:delegateResponse"/>
  </message>
  <message name="destroyCursorRequestMessage">
    <part name="destroyCursorReq" element="methods:destroyCursorRequest"/>
  </message>
  <message name="destroyCursorResponseMessage">
    <part name="destroyCursorRes" element="methods:destroyCursorResponse"/>
  </message>
  <message name="executeRuleRequestMessage">
    <part name="executeRuleReq" element="methods:executeRuleRequest"/>
  </message>
  <message name="executeRuleResponseMessage">
    <part name="executeRuleRes" element="methods:executeRuleResponse"/>
  </message>
  <message name="forwardRequestMessage">
    <part name="forwardReq" element="methods:forwardRequest"/>
  </message>
  <message name="forwardResponseMessage">
    <part name="forwardRes" element="methods:forwardResponse"/>
  </message>
  <message name="getAccountListRequestMessage">
    <part name="getAccountListReq" element="methods:getAccountListRequest"/>
  </message>
  <message name="getAccountListResponseMessage">
    <part name="getAccountListRes" element="methods:getAccountListResponse"/>
  </message>
  <message name="getAddressBookListRequestMessage">
    <part name="getAddressBookListReq" element="methods:getAddressBookListRequest"/>
  </message>
  <message name="getAddressBookListResponseMessage">
    <part name="getAddressBookListRes" element="methods:getAddressBookListResponse"/>
  </message>
  <message name="getArchiveItemsRequestMessage">
    <part name="getArchiveItemsReq" element="methods:getArchiveItemsRequest"/>
  </message>
  <message name="getArchiveItemsResponseMessage">
    <part name="getArchiveItemsRes" element="methods:getArchiveItemsResponse"/>
  </message>
  <message name="getAttachmentRequestMessage">
    <part name="getAttachmentReq" element="methods:getAttachmentRequest"/>
  </message>
  <message name="getAttachmentResponseMessage">
    <part name="getAttachmentRes" element="methods:getAttachmentResponse"/>
  </message>
  <message name="getCategoryListRequestMessage">
    <part name="getCategoryListReq" element="methods:getCategoryListRequest"/>
  </message>
  <message name="getCategoryListResponseMessage">
    <part name="getCategoryListRes" element="methods:getCategoryListResponse"/>
  </message>
  <message name="getContactHistoryFilterRequestMessage">
    <part name="getContactHistoryFilterReq" element="methods:getContactHistoryFilterRequest"/>
  </message>
  <message name="getContactHistoryFilterResponseMessage">
    <part name="getContactHistoryFilterRes" element="methods:getContactHistoryFilterResponse"/>
  </message>
  <message name="getCustomListRequestMessage">
    <part name="getCustomListReq" element="methods:getCustomListRequest"/>
  </message>
  <message name="getCustomListResponseMessage">
    <part name="getCustomListRes" element="methods:getCustomListResponse"/>
  </message>
  <message name="getDeltasRequestMessage">
    <part name="getDeltasReq" element="methods:getDeltasRequest"/>
  </message>
  <message name="getDeltasResponseMessage">
    <part name="getDeltasRes" element="methods:getDeltasResponse"/>
  </message>
  <message name="getDeltaInfoRequestMessage">
    <part name="getDeltaInfoReq" element="methods:getDeltaInfoRequest"/>
  </message>
  <message name="getDeltaInfoResponseMessage">
    <part name="getDeltaInfoRes" element="methods:getDeltaInfoResponse"/>
  </message>
  <message name="getDiskSpaceUsageRequestMessage">
    <part name="getDiskSpaceUsageReq" element="methods:getDiskSpaceUsageRequest"/>
  </message>
  <message name="getDiskSpaceUsageResponseMessage">
    <part name="getDiskSpaceUsageRes" element="methods:getDiskSpaceUsageResponse"/>
  </message>
  <message name="getDocumentTypeListRequestMessage">
    <part name="getDocumentTypeListReq" element="methods:getDocumentTypeListRequest"/>
  </message>
  <message name="getDocumentTypeListResponseMessage">
    <part name="getDocumentTypeListRes" element="methods:getDocumentTypeListResponse"/>
  </message>
  <message name="getFolderRequestMessage">
    <part name="getFolderReq" element="methods:getFolderRequest"/>
  </message>
  <message name="getFolderResponseMessage">
    <part name="getFolderRes" element="methods:getFolderResponse"/>
  </message>
  <message name="getFolderListRequestMessage">
    <part name="getFolderListReq" element="methods:getFolderListRequest"/>
  </message>
  <message name="getFolderListResponseMessage">
    <part name="getFolderListRes" element="methods:getFolderListResponse"/>
  </message>
  <message name="getFreeBusyRequestMessage">
    <part name="getFreeBusyReq" element="methods:getFreeBusyRequest"/>
  </message>
  <message name="getFreeBusyResponseMessage">
    <part name="getFreeBusyRes" element="methods:getFreeBusyResponse"/>
  </message>
  <message name="getItemRequestMessage">
    <part name="getItemReq" element="methods:getItemRequest"/>
  </message>
  <message name="getItemResponseMessage">
    <part name="getItemRes" element="methods:getItemResponse"/>
  </message>
  <message name="getItemsRequestMessage">
    <part name="getItemsReq" element="methods:getItemsRequest"/>
  </message>
  <message name="getItemsResponseMessage">
    <part name="getItemsRes" element="methods:getItemsResponse"/>
  </message>
  <message name="getJunkEntriesRequestMessage">
    <part name="getJunkEntriesReq" element="methods:getJunkEntriesRequest"/>
  </message>
  <message name="getJunkEntriesResponseMessage">
    <part name="getJunkEntriesRes" element="methods:getJunkEntriesResponse"/>
  </message>
  <message name="getJunkMailSettingsRequestMessage">
    <part name="getJunkMailSettingsReq" element="methods:getJunkMailSettingsRequest"/>
  </message>
  <message name="getJunkMailSettingsResponseMessage">
    <part name="getJunkMailSettingsRes" element="methods:getJunkMailSettingsResponse"/>
  </message>
  <message name="getLibraryItemRequestMessage">
    <part name="getLibraryItemReq" element="methods:getLibraryItemRequest"/>
  </message>
  <message name="getLibraryItemResponseMessage">
    <part name="getLibraryItemRes" element="methods:getLibraryItemResponse"/>
  </message>
  <message name="getLibraryListRequestMessage">
    <part name="getLibraryListReq" element="methods:getLibraryListRequest"/>
  </message>
  <message name="getLibraryListResponseMessage">
    <part name="getLibraryListRes" element="methods:getLibraryListResponse"/>
  </message>
  <message name="getMemberOfRequestMessage">
    <part name="getMemberOfReq" element="methods:getMemberOfRequest"/>
  </message>
  <message name="getMemberOfResponseMessage">
    <part name="getMemberOfRes" element="methods:getMemberOfResponse"/>
  </message>
  <message name="getNotifyListRequestMessage">
    <part name="getNotifyListReq" element="methods:getNotifyListRequest"/>
  </message>
  <message name="getNotifyListResponseMessage">
    <part name="getNotifyListRes" element="methods:getNotifyListResponse"/>
  </message>
  <message name="getQuickMessagesRequestMessage">
    <part name="getQuickMessagesReq" element="methods:getQuickMessagesRequest"/>
  </message>
  <message name="getQuickMessagesResponseMessage">
    <part name="getQuickMessagesRes" element="methods:getQuickMessagesResponse"/>
  </message>
  <message name="getProxyAccessListRequestMessage">
    <part name="getProxyAccessListReq" element="methods:getProxyAccessListRequest"/>
  </message>
  <message name="getProxyAccessListResponseMessage">
    <part name="getProxyAccessListRes" element="methods:getProxyAccessListResponse"/>
  </message>
  <message name="getProxyListRequestMessage">
    <part name="getProxyListReq" element="methods:getProxyListRequest"/>
  </message>
  <message name="getProxyListResponseMessage">
    <part name="getProxyListRes" element="methods:getProxyListResponse"/>
  </message>
  <message name="getRuleListRequestMessage">
    <part name="getRuleListReq" element="methods:getRuleListRequest"/>
  </message>
  <message name="getRuleListResponseMessage">
    <part name="getRuleListRes" element="methods:getRuleListResponse"/>
  </message>
  <message name="getSettingsRequestMessage">
    <part name="getSettingsReq" element="methods:getSettingsRequest"/>
  </message>
  <message name="getSettingsResponseMessage">
    <part name="getSettingsRes" element="methods:getSettingsResponse"/>
  </message>
  <message name="getSignaturesRequestMessage">
    <part name="getSignaturesReq" element="methods:getSignaturesRequest"/>
  </message>
  <message name="getSignaturesResponseMessage">
    <part name="getSignaturesRes" element="methods:getSignaturesResponse"/>
  </message>
  <message name="getStringRequestMessage">
    <part name="getStringReq" element="methods:getStringRequest"/>
  </message>
  <message name="getStringResponseMessage">
    <part name="getStringRes" element="methods:getStringResponse"/>
  </message>
  <message name="getTimestampRequestMessage">
    <part name="getTimestampReq" element="methods:getTimestampRequest"/>
  </message>
  <message name="getTimestampResponseMessage">
    <part name="getTimestampRes" element="methods:getTimestampResponse"/>
  </message>
  <message name="getTimezoneListRequestMessage">
    <part name="getTimezoneListReq" element="methods:getTimezoneListRequest"/>
  </message>
  <message name="getTimezoneListResponseMessage">
    <part name="getTimezoneListRes" element="methods:getTimezoneListResponse"/>
  </message>
  <message name="getUnreadRequestMessage">
    <part name="getUnreadReq" element="methods:getUnreadRequest"/>
  </message>
  <message name="getUnreadResponseMessage">
    <part name="getUnreadRes" element="methods:getUnreadResponse"/>
  </message>
  <message name="getUserListRequestMessage">
    <part name="getUserListReq" element="methods:getUserListRequest"/>
  </message>
  <message name="getUserListResponseMessage">
    <part name="getUserListRes" element="methods:getUserListResponse"/>
  </message>
  <message name="gwTraceMessage">
    <part name="gwTrace" element="types:gwTrace"/>
  </message>
  <message name="loginRequestMessage">
    <part name="loginReq" element="methods:loginRequest"/>
  </message>
  <message name="loginResponseMessage">
    <part name="loginRes" element="methods:loginResponse"/>
  </message>
  <message name="logoutRequestMessage">
    <part name="logoutReq" element="methods:logoutRequest"/>
  </message>
  <message name="logoutResponseMessage">
    <part name="logoutRes" element="methods:logoutResponse"/>
  </message>
  <message name="markPrivateRequestMessage">
    <part name="markPrivateReq" element="methods:markPrivateRequest"/>
  </message>
  <message name="markPrivateResponseMessage">
    <part name="markPrivateRes" element="methods:markPrivateResponse"/>
  </message>
  <message name="markUnPrivateRequestMessage">
    <part name="markUnPrivateReq" element="methods:markUnPrivateRequest"/>
  </message>
  <message name="markUnPrivateResponseMessage">
    <part name="markUnPrivateRes" element="methods:markUnPrivateResponse"/>
  </message>
  <message name="markReadRequestMessage">
    <part name="markReadReq" element="methods:markReadRequest"/>
  </message>
  <message name="markReadResponseMessage">
    <part name="markReadRes" element="methods:markReadResponse"/>
  </message>
  <message name="markUnReadRequestMessage">
    <part name="markUnReadReq" element="methods:markUnReadRequest"/>
  </message>
  <message name="markUnReadResponseMessage">
    <part name="markUnReadRes" element="methods:markUnReadResponse"/>
  </message>
  <message name="modifyItemRequestMessage">
    <part name="modifyItemReq" element="methods:modifyItemRequest"/>
  </message>
  <message name="modifyItemResponseMessage">
    <part name="modifyItemRes" element="methods:modifyItemResponse"/>
  </message>
  <message name="modifyItemsRequestMessage">
    <part name="modifyItemsReq" element="methods:modifyItemsRequest"/>
  </message>
  <message name="modifyItemsResponseMessage">
    <part name="modifyItemsRes" element="methods:modifyItemsResponse"/>
  </message>
  <message name="modifyJunkEntryRequestMessage">
    <part name="modifyJunkEntryReq" element="methods:modifyJunkEntryRequest"/>
  </message>
  <message name="modifyJunkEntryResponseMessage">
    <part name="modifyJunkEntryRes" element="methods:modifyJunkEntryResponse"/>
  </message>
  <message name="modifyJunkMailSettingsRequestMessage">
    <part name="modifyJunkMailSettingsReq" element="methods:modifyJunkMailSettingsRequest"/>
  </message>
  <message name="modifyJunkMailSettingsResponseMessage">
    <part name="modifyJunkMailSettingsRes" element="methods:modifyJunkMailSettingsResponse"/>
  </message>
  <message name="modifyNotifyRequestMessage">
    <part name="modifyNotifyReq" element="methods:modifyNotifyRequest"/>
  </message>
  <message name="modifyNotifyResponseMessage">
    <part name="modifyNotifyRes" element="methods:modifyNotifyResponse"/>
  </message>
  <message name="modifyPasswordRequestMessage">
    <part name="modifyPasswordReq" element="methods:modifyPasswordRequest"/>
  </message>
  <message name="modifyPasswordResponseMessage">
    <part name="modifyPasswordRes" element="methods:modifyPasswordResponse"/>
  </message>
  <message name="modifyProxyAccessRequestMessage">
    <part name="modifyProxyAccessReq" element="methods:modifyProxyAccessRequest"/>
  </message>
  <message name="modifyProxyAccessResponseMessage">
    <part name="modifyProxyAccessRes" element="methods:modifyProxyAccessResponse"/>
  </message>
  <message name="modifySettingsRequestMessage">
    <part name="modifySettingsReq" element="methods:modifySettingsRequest"/>
  </message>
  <message name="modifySettingsResponseMessage">
    <part name="modifySettingsRes" element="methods:modifySettingsResponse"/>
  </message>
  <message name="modifySignaturesRequestMessage">
    <part name="modifySignaturesReq" element="methods:modifySignaturesRequest"/>
  </message>
  <message name="modifySignaturesResponseMessage">
    <part name="modifySignaturesRes" element="methods:modifySignaturesResponse"/>
  </message>
  <message name="moveItemRequestMessage">
    <part name="moveItemReq" element="methods:moveItemRequest"/>
  </message>
  <message name="moveItemResponseMessage">
    <part name="moveItemRes" element="methods:moveItemResponse"/>
  </message>
  <message name="moveItemsRequestMessage">
    <part name="moveItemsReq" element="methods:moveItemsRequest"/>
  </message>
  <message name="moveItemsResponseMessage">
    <part name="moveItemsRes" element="methods:moveItemsResponse"/>
  </message>
  <message name="pollRequestMessage">
    <part name="pollReq" element="methods:pollRequest"/>
  </message>
  <message name="pollResponseMessage">
    <part name="pollRes" element="methods:pollResponse"/>
  </message>
  <message name="positionCursorRequestMessage">
    <part name="positionCursorReq" element="methods:positionCursorRequest"/>
  </message>
  <message name="positionCursorResponseMessage">
    <part name="positionCursorRes" element="methods:positionCursorResponse"/>
  </message>
  <message name="purgeDeletedItemsRequestMessage">
    <part name="purgeDeletedItemsReq" element="methods:purgeDeletedItemsRequest"/>
  </message>
  <message name="purgeDeletedItemsResponseMessage">
    <part name="purgeDeletedItemsRes" element="methods:purgeDeletedItemsResponse"/>
  </message>
  <message name="purgeRequestMessage">
    <part name="purgeReq" element="methods:purgeRequest"/>
  </message>
  <message name="purgeResponseMessage">
    <part name="purgeRes" element="methods:purgeResponse"/>
  </message>
  <message name="readCursorRequestMessage">
    <part name="readCursorReq" element="methods:readCursorRequest"/>
  </message>
  <message name="readCursorResponseMessage">
    <part name="readCursorRes" element="methods:readCursorResponse"/>
  </message>
  <message name="removeCustomDefinitionRequestMessage">
    <part name="removeCustomDefinitionReq" element="methods:removeCustomDefinitionRequest"/>
  </message>
  <message name="removeCustomDefinitionResponseMessage">
    <part name="removeCustomDefinitionRes" element="methods:removeCustomDefinitionResponse"/>
  </message>
  <message name="removeItemRequestMessage">
    <part name="removeItemReq" element="methods:removeItemRequest"/>
  </message>
  <message name="removeItemResponseMessage">
    <part name="removeItemRes" element="methods:removeItemResponse"/>
  </message>
  <message name="removeItemsRequestMessage">
    <part name="removeItemsReq" element="methods:removeItemsRequest"/>
  </message>
  <message name="removeItemsResponseMessage">
    <part name="removeItemsRes" element="methods:removeItemsResponse"/>
  </message>
  <message name="removeJunkEntryRequestMessage">
    <part name="removeJunkEntryReq" element="methods:removeJunkEntryRequest"/>
  </message>
  <message name="removeJunkEntryResponseMessage">
    <part name="removeJunkEntryRes" element="methods:removeJunkEntryResponse"/>
  </message>
  <message name="removeMembersRequestMessage">
    <part name="removeMembersReq" element="methods:removeMembersRequest"/>
  </message>
  <message name="removeMembersResponseMessage">
    <part name="removeMembersRes" element="methods:removeMembersResponse"/>
  </message>
  <message name="removeNotifyRequestMessage">
    <part name="removeNotifyReq" element="methods:removeNotifyRequest"/>
  </message>
  <message name="removeNotifyResponseMessage">
    <part name="removeNotifyRes" element="methods:removeNotifyResponse"/>
  </message>
  <message name="removeProxyAccessRequestMessage">
    <part name="removeProxyAccessReq" element="methods:removeProxyAccessRequest"/>
  </message>
  <message name="removeProxyAccessResponseMessage">
    <part name="removeProxyAccessRes" element="methods:removeProxyAccessResponse"/>
  </message>
  <message name="removeProxyUserRequestMessage">
    <part name="removeProxyUserReq" element="methods:removeProxyUserRequest"/>
  </message>
  <message name="removeProxyUserResponseMessage">
    <part name="removeProxyUserRes" element="methods:removeProxyUserResponse"/>
  </message>
  <message name="removeSignatureRequestMessage">
    <part name="removeSignatureReq" element="methods:removeSignatureRequest"/>
  </message>
  <message name="removeSignatureResponseMessage">
    <part name="removeSignatureRes" element="methods:removeSignatureResponse"/>
  </message>
  <message name="replyRequestMessage">
    <part name="replyReq" element="methods:replyRequest"/>
  </message>
  <message name="replyResponseMessage">
    <part name="replyRes" element="methods:replyResponse"/>
  </message>
  <message name="resendRequestMessage">
    <part name="resendReq" element="methods:resendRequest"/>
  </message>
  <message name="resendResponseMessage">
    <part name="resendRes" element="methods:resendResponse"/>
  </message>
  <message name="resolveRequestMessage">
    <part name="resolveReq" element="methods:resolveRequest"/>
  </message>
  <message name="resolveResponseMessage">
    <part name="resolveRes" element="methods:resolveResponse"/>
  </message>
  <message name="restoreItemRequestMessage">
    <part name="restoreItemReq" element="methods:restoreItemRequest"/>
  </message>
  <message name="restoreItemResponseMessage">
    <part name="restoreItemRes" element="methods:restoreItemResponse"/>
  </message>
  <message name="retractRequestMessage">
    <part name="retractReq" element="methods:retractRequest"/>
  </message>
  <message name="retractResponseMessage">
    <part name="retractRes" element="methods:retractResponse"/>
  </message>
  <message name="sendItemRequestMessage">
    <part name="sendItemReq" element="methods:sendItemRequest"/>
  </message>
  <message name="sendItemResponseMessage">
    <part name="sendItemRes" element="methods:sendItemResponse"/>
  </message>
  <message name="sessionMessage">
    <part name="sessionId" element="types:session"/>
  </message>
  <message name="setTimestampRequestMessage">
    <part name="setTimestampReq" element="methods:setTimestampRequest"/>
  </message>
  <message name="setTimestampResponseMessage">
    <part name="setTimestampRes" element="methods:setTimestampResponse"/>
  </message>
  <message name="startFreeBusySessionRequestMessage">
    <part name="startFreeBusySessionReq" element="methods:startFreeBusySessionRequest"/>
  </message>
  <message name="startFreeBusySessionResponseMessage">
    <part name="startFreeBusySessionRes" element="methods:startFreeBusySessionResponse"/>
  </message>
  <message name="streamedSearchRequestMessage">
    <part name="streamedSearchReq" element="methods:streamedSearchRequest"/>
  </message>
  <message name="streamedSearchResponseMessage">
    <part name="streamedSearchRes" element="methods:streamedSearchResponse"/>
  </message>
  <message name="stubItemRequestMessage">
    <part name="stubItemReq" element="methods:stubItemRequest"/>
  </message>
  <message name="stubItemResponseMessage">
    <part name="stubItemRes" element="methods:stubItemResponse"/>
  </message>
  <message name="unacceptRequestMessage">
    <part name="unacceptReq" element="methods:unacceptRequest"/>
  </message>
  <message name="unacceptResponseMessage">
    <part name="unacceptRes" element="methods:unacceptResponse"/>
  </message>
  <message name="unarchiveRequestMessage">
    <part name="unarchiveReq" element="methods:unarchiveRequest"/>
  </message>
  <message name="unarchiveResponseMessage">
    <part name="unarchiveRes" element="methods:unarchiveResponse"/>
  </message>
  <message name="uncompleteRequestMessage">
    <part name="uncompleteReq" element="methods:uncompleteRequest"/>
  </message>
  <message name="uncompleteResponseMessage">
    <part name="uncompleteRes" element="methods:uncompleteResponse"/>
  </message>
  <message name="updateVersionStatusRequestMessage">
    <part name="updateVersionStatusReq" element="methods:updateVersionStatusRequest"/>
  </message>
  <message name="updateVersionStatusResponseMessage">
    <part name="updateVersionStatusRes" element="methods:updateVersionStatusResponse"/>
  </message>
  <message name="cleanEventConfigurationRequestMessage">
    <part name="cleanEventConfigurationReq" element="events:cleanEventConfigurationRequest"/>
  </message>
  <message name="cleanEventConfigurationResponseMessage">
    <part name="cleanEventConfigurationRes" element="events:cleanEventConfigurationResponse"/>
  </message>
  <message name="configureEventsRequestMessage">
    <part name="configureEventsReq" element="events:configureEventsRequest"/>
  </message>
  <message name="configureEventsResponseMessage">
    <part name="configureEventsRes" element="events:configureEventsResponse"/>
  </message>
  <message name="getEventConfigurationRequestMessage">
    <part name="getEventConfigurationReq" element="events:getEventConfigurationRequest"/>
  </message>
  <message name="getEventConfigurationResponseMessage">
    <part name="getEventConfigurationRes" element="events:getEventConfigurationResponse"/>
  </message>
  <message name="getEventsRequestMessage">
    <part name="getEventsReq" element="events:getEventsRequest"/>
  </message>
  <message name="getEventsResponseMessage">
    <part name="getEventsRes" element="events:getEventsResponse"/>
  </message>
  <message name="removeEventConfigurationRequestMessage">
    <part name="removeEventConfigurationReq" element="events:removeEventConfigurationRequest"/>
  </message>
  <message name="removeEventConfigurationResponseMessage">
    <part name="removeEventConfigurationRes" element="events:removeEventConfigurationResponse"/>
  </message>
  <message name="removeEventsRequestMessage">
    <part name="removeEventsReq" element="events:removeEventsRequest"/>
  </message>
  <message name="removeEventsResponseMessage">
    <part name="removeEventsRes" element="events:removeEventsResponse"/>
  </message>
  <portType name="GroupWisePortType">
    <operation name="acceptRequest">
      <input message="tns:acceptRequestMessage"/>
      <output message="tns:acceptResponseMessage"/>
    </operation>
    <operation name="acceptShareRequest">
      <input message="tns:acceptShareRequestMessage"/>
      <output message="tns:acceptShareResponseMessage"/>
    </operation>
    <operation name="addItemRequest">
      <input message="tns:addItemRequestMessage"/>
      <output message="tns:addItemResponseMessage"/>
    </operation>
    <operation name="addItemsRequest">
      <input message="tns:addItemsRequestMessage"/>
      <output message="tns:addItemsResponseMessage"/>
    </operation>
    <operation name="addMembersRequest">
      <input message="tns:addMembersRequestMessage"/>
      <output message="tns:addMembersResponseMessage"/>
    </operation>
    <operation name="archiveRequest">
      <input message="tns:archiveRequestMessage"/>
      <output message="tns:archiveResponseMessage"/>
    </operation>
    <operation name="closeFreeBusySessionRequest">
      <input message="tns:closeFreeBusySessionRequestMessage"/>
      <output message="tns:closeFreeBusySessionResponseMessage"/>
    </operation>
    <operation name="completeRequest">
      <input message="tns:completeRequestMessage"/>
      <output message="tns:completeResponseMessage"/>
    </operation>
    <operation name="createCursorRequest">
      <input message="tns:createCursorRequestMessage"/>
      <output message="tns:createCursorResponseMessage"/>
    </operation>
    <operation name="createItemRequest">
      <input message="tns:createItemRequestMessage"/>
      <output message="tns:createItemResponseMessage"/>
    </operation>
    <operation name="createItemsRequest">
      <input message="tns:createItemsRequestMessage"/>
      <output message="tns:createItemsResponseMessage"/>
    </operation>
    <operation name="createJunkEntryRequest">
      <input message="tns:createJunkEntryRequestMessage"/>
      <output message="tns:createJunkEntryResponseMessage"/>
    </operation>
    <operation name="createNotifyRequest">
      <input message="tns:createNotifyRequestMessage"/>
      <output message="tns:createNotifyResponseMessage"/>
    </operation>
    <operation name="createProxyAccessRequest">
      <input message="tns:createProxyAccessRequestMessage"/>
      <output message="tns:createProxyAccessResponseMessage"/>
    </operation>
    <operation name="createSignatureRequest">
      <input message="tns:createSignatureRequestMessage"/>
      <output message="tns:createSignatureResponseMessage"/>
    </operation>
    <operation name="declineRequest">
      <input message="tns:declineRequestMessage"/>
      <output message="tns:declineResponseMessage"/>
    </operation>
    <operation name="delegateRequest">
      <input message="tns:delegateRequestMessage"/>
      <output message="tns:delegateResponseMessage"/>
    </operation>
    <operation name="destroyCursorRequest">
      <input message="tns:destroyCursorRequestMessage"/>
      <output message="tns:destroyCursorResponseMessage"/>
    </operation>
    <operation name="executeRuleRequest">
      <input message="tns:executeRuleRequestMessage"/>
      <output message="tns:executeRuleResponseMessage"/>
    </operation>
    <operation name="forwardRequest">
      <input message="tns:forwardRequestMessage"/>
      <output message="tns:forwardResponseMessage"/>
    </operation>
    <operation name="getAccountListRequest">
      <input message="tns:getAccountListRequestMessage"/>
      <output message="tns:getAccountListResponseMessage"/>
    </operation>
    <operation name="getAddressBookListRequest">
      <input message="tns:getAddressBookListRequestMessage"/>
      <output message="tns:getAddressBookListResponseMessage"/>
    </operation>
    <operation name="getArchiveItemsRequest">
      <input message="tns:getArchiveItemsRequestMessage"/>
      <output message="tns:getArchiveItemsResponseMessage"/>
    </operation>
    <operation name="getAttachmentRequestMessage">
      <input message="tns:getAttachmentRequestMessage"/>
      <output message="tns:getAttachmentResponseMessage"/>
    </operation>
    <operation name="getCategoryListRequest">
      <input message="tns:getCategoryListRequestMessage"/>
      <output message="tns:getCategoryListResponseMessage"/>
    </operation>
    <operation name="getContactHistoryFilterRequest">
      <input message="tns:getContactHistoryFilterRequestMessage"/>
      <output message="tns:getContactHistoryFilterResponseMessage"/>
    </operation>
    <operation name="getCustomListRequest">
      <input message="tns:getCustomListRequestMessage"/>
      <output message="tns:getCustomListResponseMessage"/>
    </operation>
    <operation name="getDeltasRequest">
      <input message="tns:getDeltasRequestMessage"/>
      <output message="tns:getDeltasResponseMessage"/>
    </operation>
    <operation name="getDeltaInfoRequest">
      <input message="tns:getDeltaInfoRequestMessage"/>
      <output message="tns:getDeltaInfoResponseMessage"/>
    </operation>
    <operation name="getDiskSpaceUsageRequest">
      <input message="tns:getDiskSpaceUsageRequestMessage"/>
      <output message="tns:getDiskSpaceUsageResponseMessage"/>
    </operation>
    <operation name="getDocumentTypeListRequest">
      <input message="tns:getDocumentTypeListRequestMessage"/>
      <output message="tns:getDocumentTypeListResponseMessage"/>
    </operation>
    <operation name="getFolderRequest">
      <input message="tns:getFolderRequestMessage"/>
      <output message="tns:getFolderResponseMessage"/>
    </operation>
    <operation name="getFolderListRequest">
      <input message="tns:getFolderListRequestMessage"/>
      <output message="tns:getFolderListResponseMessage"/>
    </operation>
    <operation name="getFreeBusyRequest">
      <input message="tns:getFreeBusyRequestMessage"/>
      <output message="tns:getFreeBusyResponseMessage"/>
    </operation>
    <operation name="getItemRequest">
      <input message="tns:getItemRequestMessage"/>
      <output message="tns:getItemResponseMessage"/>
    </operation>
    <operation name="getItemsRequest">
      <input message="tns:getItemsRequestMessage"/>
      <output message="tns:getItemsResponseMessage"/>
    </operation>
    <operation name="getJunkEntriesRequest">
      <input message="tns:getJunkEntriesRequestMessage"/>
      <output message="tns:getJunkEntriesResponseMessage"/>
    </operation>
    <operation name="getJunkMailSettingsRequest">
      <input message="tns:getJunkMailSettingsRequestMessage"/>
      <output message="tns:getJunkMailSettingsResponseMessage"/>
    </operation>
    <operation name="getLibraryItemRequest">
      <input message="tns:getLibraryItemRequestMessage"/>
      <output message="tns:getLibraryItemResponseMessage"/>
    </operation>
    <operation name="getLibraryListRequest">
      <input message="tns:getLibraryListRequestMessage"/>
      <output message="tns:getLibraryListResponseMessage"/>
    </operation>
    <operation name="getMemberOfRequest">
      <input message="tns:getMemberOfRequestMessage"/>
      <output message="tns:getMemberOfResponseMessage"/>
    </operation>
    <operation name="getNotifyListRequest">
      <input message="tns:getNotifyListRequestMessage"/>
      <output message="tns:getNotifyListResponseMessage"/>
    </operation>
    <operation name="getQuickMessagesRequest">
      <input message="tns:getQuickMessagesRequestMessage"/>
      <output message="tns:getQuickMessagesResponseMessage"/>
    </operation>
    <operation name="getProxyAccessListRequest">
      <input message="tns:getProxyAccessListRequestMessage"/>
      <output message="tns:getProxyAccessListResponseMessage"/>
    </operation>
    <operation name="getProxyListRequest">
      <input message="tns:getProxyListRequestMessage"/>
      <output message="tns:getProxyListResponseMessage"/>
    </operation>
    <operation name="getRuleListRequest">
      <input message="tns:getRuleListRequestMessage"/>
      <output message="tns:getRuleListResponseMessage"/>
    </operation>
    <operation name="getSettingsRequest">
      <input message="tns:getSettingsRequestMessage"/>
      <output message="tns:getSettingsResponseMessage"/>
    </operation>
    <operation name="getSignaturesRequest">
      <input message="tns:getSignaturesRequestMessage"/>
      <output message="tns:getSignaturesResponseMessage"/>
    </operation>
    <operation name="getStringRequest">
      <input message="tns:getStringRequestMessage"/>
      <output message="tns:getStringResponseMessage"/>
    </operation>
    <operation name="getTimestampRequest">
      <input message="tns:getTimestampRequestMessage"/>
      <output message="tns:getTimestampResponseMessage"/>
    </operation>
    <operation name="getTimezoneListRequest">
      <input message="tns:getTimezoneListRequestMessage"/>
      <output message="tns:getTimezoneListResponseMessage"/>
    </operation>
    <operation name="getUnreadRequest">
      <input message="tns:getUnreadRequestMessage"/>
      <output message="tns:getUnreadResponseMessage"/>
    </operation>
    <operation name="getUserListRequest">
      <input message="tns:getUserListRequestMessage"/>
      <output message="tns:getUserListResponseMessage"/>
    </operation>
    <operation name="loginRequest">
      <input message="tns:loginRequestMessage"/>
      <output message="tns:loginResponseMessage"/>
    </operation>
    <operation name="logoutRequest">
      <input message="tns:logoutRequestMessage"/>
      <output message="tns:logoutResponseMessage"/>
    </operation>
    <operation name="markPrivateRequest">
      <input message="tns:markPrivateRequestMessage"/>
      <output message="tns:markPrivateResponseMessage"/>
    </operation>
    <operation name="markUnPrivateRequest">
      <input message="tns:markUnPrivateRequestMessage"/>
      <output message="tns:markUnPrivateResponseMessage"/>
    </operation>
    <operation name="markReadRequest">
      <input message="tns:markReadRequestMessage"/>
      <output message="tns:markReadResponseMessage"/>
    </operation>
    <operation name="markUnReadRequest">
      <input message="tns:markUnReadRequestMessage"/>
      <output message="tns:markUnReadResponseMessage"/>
    </operation>
    <operation name="modifyItemRequest">
      <input message="tns:modifyItemRequestMessage"/>
      <output message="tns:modifyItemResponseMessage"/>
    </operation>
    <operation name="modifyItemsRequest">
      <input message="tns:modifyItemsRequestMessage"/>
      <output message="tns:modifyItemsResponseMessage"/>
    </operation>
    <operation name="modifyJunkEntryRequest">
      <input message="tns:modifyJunkEntryRequestMessage"/>
      <output message="tns:modifyJunkEntryResponseMessage"/>
    </operation>
    <operation name="modifyJunkMailSettingsRequest">
      <input message="tns:modifyJunkMailSettingsRequestMessage"/>
      <output message="tns:modifyJunkMailSettingsResponseMessage"/>
    </operation>
    <operation name="modifyNotifyRequest">
      <input message="tns:modifyNotifyRequestMessage"/>
      <output message="tns:modifyNotifyResponseMessage"/>
    </operation>
    <operation name="modifyPasswordRequest">
      <input message="tns:modifyPasswordRequestMessage"/>
      <output message="tns:modifyPasswordResponseMessage"/>
    </operation>
    <operation name="modifyProxyAccessRequest">
      <input message="tns:modifyProxyAccessRequestMessage"/>
      <output message="tns:modifyProxyAccessResponseMessage"/>
    </operation>
    <operation name="modifySettingsRequest">
      <input message="tns:modifySettingsRequestMessage"/>
      <output message="tns:modifySettingsResponseMessage"/>
    </operation>
    <operation name="modifySignaturesRequest">
      <input message="tns:modifySignaturesRequestMessage"/>
      <output message="tns:modifySignaturesResponseMessage"/>
    </operation>
    <operation name="moveItemRequest">
      <input message="tns:moveItemRequestMessage"/>
      <output message="tns:moveItemResponseMessage"/>
    </operation>
    <operation name="moveItemsRequest">
      <input message="tns:moveItemsRequestMessage"/>
      <output message="tns:moveItemsResponseMessage"/>
    </operation>
    <operation name="pollRequest">
      <input message="tns:pollRequestMessage"/>
      <output message="tns:pollResponseMessage"/>
    </operation>
    <operation name="positionCursorRequest">
      <input message="tns:positionCursorRequestMessage"/>
      <output message="tns:positionCursorResponseMessage"/>
    </operation>
    <operation name="purgeDeletedItemsRequest">
      <input message="tns:purgeDeletedItemsRequestMessage"/>
      <output message="tns:purgeDeletedItemsResponseMessage"/>
    </operation>
    <operation name="purgeRequest">
      <input message="tns:purgeRequestMessage"/>
      <output message="tns:purgeResponseMessage"/>
    </operation>
    <operation name="readCursorRequest">
      <input message="tns:readCursorRequestMessage"/>
      <output message="tns:readCursorResponseMessage"/>
    </operation>
    <operation name="removeCustomDefinitionRequest">
      <input message="tns:removeCustomDefinitionRequestMessage"/>
      <output message="tns:removeCustomDefinitionResponseMessage"/>
    </operation>
    <operation name="removeItemRequest">
      <input message="tns:removeItemRequestMessage"/>
      <output message="tns:removeItemResponseMessage"/>
    </operation>
    <operation name="removeItemsRequest">
      <input message="tns:removeItemsRequestMessage"/>
      <output message="tns:removeItemsResponseMessage"/>
    </operation>
    <operation name="removeJunkEntryRequest">
      <input message="tns:removeJunkEntryRequestMessage"/>
      <output message="tns:removeJunkEntryResponseMessage"/>
    </operation>
    <operation name="removeMembersRequest">
      <input message="tns:removeMembersRequestMessage"/>
      <output message="tns:removeMembersResponseMessage"/>
    </operation>
    <operation name="removeNotifyRequest">
      <input message="tns:removeNotifyRequestMessage"/>
      <output message="tns:removeNotifyResponseMessage"/>
    </operation>
    <operation name="removeProxyAccessRequest">
      <input message="tns:removeProxyAccessRequestMessage"/>
      <output message="tns:removeProxyAccessResponseMessage"/>
    </operation>
    <operation name="removeProxyUserRequest">
      <input message="tns:removeProxyUserRequestMessage"/>
      <output message="tns:removeProxyUserResponseMessage"/>
    </operation>
    <operation name="removeSignatureRequest">
      <input message="tns:removeSignatureRequestMessage"/>
      <output message="tns:removeSignatureResponseMessage"/>
    </operation>
    <operation name="replyRequest">
      <input message="tns:replyRequestMessage"/>
      <output message="tns:replyResponseMessage"/>
    </operation>
    <operation name="resendRequest">
      <input message="tns:resendRequestMessage"/>
      <output message="tns:resendResponseMessage"/>
    </operation>
    <operation name="resolveRequest">
      <input message="tns:resolveRequestMessage"/>
      <output message="tns:resolveResponseMessage"/>
    </operation>
    <operation name="restoreItemRequest">
      <input message="tns:restoreItemRequestMessage"/>
      <output message="tns:restoreItemResponseMessage"/>
    </operation>
    <operation name="retractRequest">
      <input message="tns:retractRequestMessage"/>
      <output message="tns:retractResponseMessage"/>
    </operation>
    <operation name="sendItemRequest">
      <input message="tns:sendItemRequestMessage"/>
      <output message="tns:sendItemResponseMessage"/>
    </operation>
    <operation name="setTimestampRequest">
      <input message="tns:setTimestampRequestMessage"/>
      <output message="tns:setTimestampResponseMessage"/>
    </operation>
    <operation name="startFreeBusySessionRequest">
      <input message="tns:startFreeBusySessionRequestMessage"/>
      <output message="tns:startFreeBusySessionResponseMessage"/>
    </operation>
    <operation name="streamedSearchRequest">
      <input message="tns:streamedSearchRequestMessage"/>
      <output message="tns:streamedSearchResponseMessage"/>
    </operation>
    <operation name="stubItemRequest">
      <input message="tns:stubItemRequestMessage"/>
      <output message="tns:stubItemResponseMessage"/>
    </operation>
    <operation name="unacceptRequest">
      <input message="tns:unacceptRequestMessage"/>
      <output message="tns:unacceptResponseMessage"/>
    </operation>
    <operation name="unarchiveRequest">
      <input message="tns:unarchiveRequestMessage"/>
      <output message="tns:unarchiveResponseMessage"/>
    </operation>
    <operation name="uncompleteRequest">
      <input message="tns:uncompleteRequestMessage"/>
      <output message="tns:uncompleteResponseMessage"/>
    </operation>
    <operation name="updateVersionStatusRequest">
      <input message="tns:updateVersionStatusRequestMessage"/>
      <output message="tns:updateVersionStatusResponseMessage"/>
    </operation>
  </portType>
  <portType name="GroupWiseEventsPortType">
    <operation name="cleanEventConfigurationRequest">
      <input message="tns:cleanEventConfigurationRequestMessage"/>
      <output message="tns:cleanEventConfigurationResponseMessage"/>
    </operation>
    <operation name="configureEventsRequest">
      <input message="tns:configureEventsRequestMessage"/>
      <output message="tns:configureEventsResponseMessage"/>
    </operation>
    <operation name="getEventConfigurationRequest">
      <input message="tns:getEventConfigurationRequestMessage"/>
      <output message="tns:getEventConfigurationResponseMessage"/>
    </operation>
    <operation name="getEventsRequest">
      <input message="tns:getEventsRequestMessage"/>
      <output message="tns:getEventsResponseMessage"/>
    </operation>
    <operation name="removeEventConfigurationRequest">
      <input message="tns:removeEventConfigurationRequestMessage"/>
      <output message="tns:removeEventConfigurationResponseMessage"/>
    </operation>
    <operation name="removeEventsRequest">
      <input message="tns:removeEventsRequestMessage"/>
      <output message="tns:removeEventsResponseMessage"/>
    </operation>
  </portType>
  <binding name="GroupWiseBinding" type="tns:GroupWisePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="acceptRequest">
      <soap:operation soapAction="acceptRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="acceptShareRequest">
      <soap:operation soapAction="acceptShareRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="addItemRequest">
      <soap:operation soapAction="addItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="addItemsRequest">
      <soap:operation soapAction="addItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="addMembersRequest">
      <soap:operation soapAction="addMembersRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="archiveRequest">
      <soap:operation soapAction="archiveRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="closeFreeBusySessionRequest">
      <soap:operation soapAction="closeFreeBusySessionRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="completeRequest">
      <soap:operation soapAction="completeRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createCursorRequest">
      <soap:operation soapAction="createCursorRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createItemRequest">
      <soap:operation soapAction="createItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createItemsRequest">
      <soap:operation soapAction="createItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createJunkEntryRequest">
      <soap:operation soapAction="createJunkEntryRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createNotifyRequest">
      <soap:operation soapAction="createNotifyRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createProxyAccessRequest">
      <soap:operation soapAction="createProxyAccessRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="createSignatureRequest">
      <soap:operation soapAction="createSignatureRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="declineRequest">
      <soap:operation soapAction="declineRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="delegateRequest">
      <soap:operation soapAction="delegateRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="destroyCursorRequest">
      <soap:operation soapAction="destroyCursorRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="executeRuleRequest">
      <soap:operation soapAction="executeRuleRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="forwardRequest">
      <soap:operation soapAction="forwardRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAccountListRequest">
      <soap:operation soapAction="getAccountListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAddressBookListRequest">
      <soap:operation soapAction="getAddressBookListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getArchiveItemsRequest">
      <soap:operation soapAction="getArchiveItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAttachmentRequestMessage">
      <soap:operation soapAction="getAttachmentRequestMessage" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getCategoryListRequest">
      <soap:operation soapAction="getCategoryListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getContactHistoryFilterRequest">
      <soap:operation soapAction="getContactHistoryFilterRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getCustomListRequest">
      <soap:operation soapAction="getCustomListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDeltasRequest">
      <soap:operation soapAction="getDeltasRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDeltaInfoRequest">
      <soap:operation soapAction="getDeltaInfoRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDiskSpaceUsageRequest">
      <soap:operation soapAction="getDiskSpaceUsageRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDocumentTypeListRequest">
      <soap:operation soapAction="getDocumentTypeListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getFolderRequest">
      <soap:operation soapAction="getFolderRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getFolderListRequest">
      <soap:operation soapAction="getFolderListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getFreeBusyRequest">
      <soap:operation soapAction="getFreeBusyRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getItemRequest">
      <soap:operation soapAction="getItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getItemsRequest">
      <soap:operation soapAction="getItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getJunkEntriesRequest">
      <soap:operation soapAction="getJunkEntriesRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getJunkMailSettingsRequest">
      <soap:operation soapAction="getJunkMailSettingsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getLibraryItemRequest">
      <soap:operation soapAction="getLibraryItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getLibraryListRequest">
      <soap:operation soapAction="getLibraryListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getMemberOfRequest">
      <soap:operation soapAction="getMemberOfRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getNotifyListRequest">
      <soap:operation soapAction="getNotifyListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getQuickMessagesRequest">
      <soap:operation soapAction="getQuickMessagesRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getProxyAccessListRequest">
      <soap:operation soapAction="getProxyAccessListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getProxyListRequest">
      <soap:operation soapAction="getProxyListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRuleListRequest">
      <soap:operation soapAction="getRuleListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getSettingsRequest">
      <soap:operation soapAction="getSettingsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getSignaturesRequest">
      <soap:operation soapAction="getSignaturesRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getStringRequest">
      <soap:operation soapAction="getStringRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getTimestampRequest">
      <soap:operation soapAction="getTimestampRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getTimezoneListRequest">
      <soap:operation soapAction="getTimezoneListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getUnreadRequest">
      <soap:operation soapAction="getUnreadRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getUserListRequest">
      <soap:operation soapAction="getUserListRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="loginRequest">
      <soap:operation soapAction="loginRequest" style="document"/>
      <input>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="logoutRequest">
      <soap:operation soapAction="logoutRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="markPrivateRequest">
      <soap:operation soapAction="markPrivateRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="markReadRequest">
      <soap:operation soapAction="markReadRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="markUnPrivateRequest">
      <soap:operation soapAction="markUnPrivateRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="markUnReadRequest">
      <soap:operation soapAction="markUnReadRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyItemRequest">
      <soap:operation soapAction="modifyItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyItemsRequest">
      <soap:operation soapAction="modifyItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyJunkEntryRequest">
      <soap:operation soapAction="modifyJunkEntryRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyJunkMailSettingsRequest">
      <soap:operation soapAction="modifyJunkMailSettingsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyNotifyRequest">
      <soap:operation soapAction="modifyNotifyRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyPasswordRequest">
      <soap:operation soapAction="modifyPasswordRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifyProxyAccessRequest">
      <soap:operation soapAction="modifyProxyAccessRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifySettingsRequest">
      <soap:operation soapAction="modifySettingsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="modifySignaturesRequest">
      <soap:operation soapAction="modifySignaturesRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="moveItemRequest">
      <soap:operation soapAction="moveItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="moveItemsRequest">
      <soap:operation soapAction="moveItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="pollRequest">
      <soap:operation soapAction="pollRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="positionCursorRequest">
      <soap:operation soapAction="positionCursorRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purgeDeletedItemsRequest">
      <soap:operation soapAction="purgeDeletedItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purgeRequest">
      <soap:operation soapAction="purgeRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="readCursorRequest">
      <soap:operation soapAction="readCursorRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeCustomDefinitionRequest">
      <soap:operation soapAction="removeCustomDefinitionRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeItemRequest">
      <soap:operation soapAction="removeItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeItemsRequest">
      <soap:operation soapAction="removeItemsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeJunkEntryRequest">
      <soap:operation soapAction="removeJunkEntryRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeMembersRequest">
      <soap:operation soapAction="removeMembersRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeNotifyRequest">
      <soap:operation soapAction="removeNotifyRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeProxyAccessRequest">
      <soap:operation soapAction="removeProxyAccessRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeProxyUserRequest">
      <soap:operation soapAction="removeProxyUserRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeSignatureRequest">
      <soap:operation soapAction="removeSignatureRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="replyRequest">
      <soap:operation soapAction="replyRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="resendRequest">
      <soap:operation soapAction="resendRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="resolveRequest">
      <soap:operation soapAction="resolveRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="restoreItemRequest">
      <soap:operation soapAction="restoreItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="retractRequest">
      <soap:operation soapAction="retractRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="sendItemRequest">
      <soap:operation soapAction="sendItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="setTimestampRequest">
      <soap:operation soapAction="setTimestampRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="startFreeBusySessionRequest">
      <soap:operation soapAction="startFreeBusySessionRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="streamedSearchRequest">
      <soap:operation soapAction="streamedSearchRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="stubItemRequest">
      <soap:operation soapAction="stubItemRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="unacceptRequest">
      <soap:operation soapAction="unacceptRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="uncompleteRequest">
      <soap:operation soapAction="uncompleteRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="unarchiveRequest">
      <soap:operation soapAction="unarchiveRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="updateVersionStatusRequest">
      <soap:operation soapAction="updateVersionStatusRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="GroupWiseEventsBinding" type="tns:GroupWiseEventsPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cleanEventConfigurationRequest">
      <soap:operation soapAction="cleanEventConfigurationRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="configureEventsRequest">
      <soap:operation soapAction="configureEventsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getEventConfigurationRequest">
      <soap:operation soapAction="getEventConfigurationRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getEventsRequest">
      <soap:operation soapAction="getEventsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeEventConfigurationRequest">
      <soap:operation soapAction="removeEventConfigurationRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeEventsRequest">
      <soap:operation soapAction="removeEventsRequest" style="document"/>
      <input>
        <soap:header message="tns:sessionMessage" part="sessionId" use="literal"/>
        <soap:header message="tns:gwTraceMessage" part="gwTrace" use="literal"/>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="GroupwiseService">
    <port binding="tns:GroupWiseBinding" name="GroupwiseSOAPPort">
      <documentation>
        The default port for the GroupWise SOAP protocol is 7191.
      </documentation>
      <soap:address location="http://localhost:7191"/>
    </port>
    <port binding="tns:GroupWiseEventsBinding" name="GroupwiseEventsSOAPPort">
      <documentation>
        The default port for the GroupWise Events is the same as the SOAP protocol - 7191.
      </documentation>
      <soap:address location="http://localhost:7191"/>
    </port>
  </service>
</definitions>